1     0000              MODULE game_player_c
2     0000              LINE 0, "game_player.c"
0     0000              
1     0000              ;--------------------------------------------------------
2     0000              ; File Created by SDCC : free open source ANSI-C Compiler
3     0000              ; Version 3.6.9 #9958 (Mac OS X i386)
4     0000              ;--------------------------------------------------------
5     0000              ; Processed by Z88DK
6     0000              ;--------------------------------------------------------
7     0000              
8     0000              	EXTERN __divschar
9     0000              	EXTERN __divschar_callee
10    0000              	EXTERN __divsint
11    0000              	EXTERN __divsint_callee
12    0000              	EXTERN __divslong
13    0000              	EXTERN __divslong_callee
14    0000              	EXTERN __divslonglong
15    0000              	EXTERN __divslonglong_callee
16    0000              	EXTERN __divsuchar
17    0000              	EXTERN __divsuchar_callee
18    0000              	EXTERN __divuchar
19    0000              	EXTERN __divuchar_callee
20    0000              	EXTERN __divuint
21    0000              	EXTERN __divuint_callee
22    0000              	EXTERN __divulong
23    0000              	EXTERN __divulong_callee
24    0000              	EXTERN __divulonglong
25    0000              	EXTERN __divulonglong_callee
26    0000              	EXTERN __divuschar
27    0000              	EXTERN __divuschar_callee
28    0000              	EXTERN __modschar
29    0000              	EXTERN __modschar_callee
30    0000              	EXTERN __modsint
31    0000              	EXTERN __modsint_callee
32    0000              	EXTERN __modslong
33    0000              	EXTERN __modslong_callee
34    0000              	EXTERN __modslonglong
35    0000              	EXTERN __modslonglong_callee
36    0000              	EXTERN __modsuchar
37    0000              	EXTERN __modsuchar_callee
38    0000              	EXTERN __moduchar
39    0000              	EXTERN __moduchar_callee
40    0000              	EXTERN __moduint
41    0000              	EXTERN __moduint_callee
42    0000              	EXTERN __modulong
43    0000              	EXTERN __modulong_callee
44    0000              	EXTERN __modulonglong
45    0000              	EXTERN __modulonglong_callee
46    0000              	EXTERN __moduschar
47    0000              	EXTERN __moduschar_callee
48    0000              	EXTERN __mulint
49    0000              	EXTERN __mulint_callee
50    0000              	EXTERN __mullong
51    0000              	EXTERN __mullong_callee
52    0000              	EXTERN __mullonglong
53    0000              	EXTERN __mullonglong_callee
54    0000              	EXTERN __mulschar
55    0000              	EXTERN __mulschar_callee
56    0000              	EXTERN __mulsuchar
57    0000              	EXTERN __mulsuchar_callee
58    0000              	EXTERN __muluschar
59    0000              	EXTERN __muluschar_callee
60    0000              	EXTERN __rlslonglong
61    0000              	EXTERN __rlslonglong_callee
62    0000              	EXTERN __rlulonglong
63    0000              	EXTERN __rlulonglong_callee
64    0000              	EXTERN __rrslonglong
65    0000              	EXTERN __rrslonglong_callee
66    0000              	EXTERN __rrulonglong
67    0000              	EXTERN __rrulonglong_callee
68    0000              	EXTERN ___sdcc_call_hl
69    0000              	EXTERN ___sdcc_call_iy
70    0000              	EXTERN ___sdcc_enter_ix
71    0000              	EXTERN _banked_call
72    0000              	EXTERN _banked_ret
73    0000              	EXTERN ___fs2schar
74    0000              	EXTERN ___fs2schar_callee
75    0000              	EXTERN ___fs2sint
76    0000              	EXTERN ___fs2sint_callee
77    0000              	EXTERN ___fs2slong
78    0000              	EXTERN ___fs2slong_callee
79    0000              	EXTERN ___fs2slonglong
80    0000              	EXTERN ___fs2slonglong_callee
81    0000              	EXTERN ___fs2uchar
82    0000              	EXTERN ___fs2uchar_callee
83    0000              	EXTERN ___fs2uint
84    0000              	EXTERN ___fs2uint_callee
85    0000              	EXTERN ___fs2ulong
86    0000              	EXTERN ___fs2ulong_callee
87    0000              	EXTERN ___fs2ulonglong
88    0000              	EXTERN ___fs2ulonglong_callee
89    0000              	EXTERN ___fsadd
90    0000              	EXTERN ___fsadd_callee
91    0000              	EXTERN ___fsdiv
92    0000              	EXTERN ___fsdiv_callee
93    0000              	EXTERN ___fseq
94    0000              	EXTERN ___fseq_callee
95    0000              	EXTERN ___fsgt
96    0000              	EXTERN ___fsgt_callee
97    0000              	EXTERN ___fslt
98    0000              	EXTERN ___fslt_callee
99    0000              	EXTERN ___fsmul
100   0000              	EXTERN ___fsmul_callee
101   0000              	EXTERN ___fsneq
102   0000              	EXTERN ___fsneq_callee
103   0000              	EXTERN ___fssub
104   0000              	EXTERN ___fssub_callee
105   0000              	EXTERN ___schar2fs
106   0000              	EXTERN ___schar2fs_callee
107   0000              	EXTERN ___sint2fs
108   0000              	EXTERN ___sint2fs_callee
109   0000              	EXTERN ___slong2fs
110   0000              	EXTERN ___slong2fs_callee
111   0000              	EXTERN ___slonglong2fs
112   0000              	EXTERN ___slonglong2fs_callee
113   0000              	EXTERN ___uchar2fs
114   0000              	EXTERN ___uchar2fs_callee
115   0000              	EXTERN ___uint2fs
116   0000              	EXTERN ___uint2fs_callee
117   0000              	EXTERN ___ulong2fs
118   0000              	EXTERN ___ulong2fs_callee
119   0000              	EXTERN ___ulonglong2fs
120   0000              	EXTERN ___ulonglong2fs_callee
121   0000              	EXTERN ____sdcc_2_copy_src_mhl_dst_deix
122   0000              	EXTERN ____sdcc_2_copy_src_mhl_dst_bcix
123   0000              	EXTERN ____sdcc_4_copy_src_mhl_dst_deix
124   0000              	EXTERN ____sdcc_4_copy_src_mhl_dst_bcix
125   0000              	EXTERN ____sdcc_4_copy_src_mhl_dst_mbc
126   0000              	EXTERN ____sdcc_4_ldi_nosave_bc
127   0000              	EXTERN ____sdcc_4_ldi_save_bc
128   0000              	EXTERN ____sdcc_4_push_hlix
129   0000              	EXTERN ____sdcc_4_push_mhl
130   0000              	EXTERN ____sdcc_lib_setmem_hl
131   0000              	EXTERN ____sdcc_ll_add_de_bc_hl
132   0000              	EXTERN ____sdcc_ll_add_de_bc_hlix
133   0000              	EXTERN ____sdcc_ll_add_de_hlix_bc
134   0000              	EXTERN ____sdcc_ll_add_de_hlix_bcix
135   0000              	EXTERN ____sdcc_ll_add_deix_bc_hl
136   0000              	EXTERN ____sdcc_ll_add_deix_hlix
137   0000              	EXTERN ____sdcc_ll_add_hlix_bc_deix
138   0000              	EXTERN ____sdcc_ll_add_hlix_deix_bc
139   0000              	EXTERN ____sdcc_ll_add_hlix_deix_bcix
140   0000              	EXTERN ____sdcc_ll_asr_hlix_a
141   0000              	EXTERN ____sdcc_ll_asr_mbc_a
142   0000              	EXTERN ____sdcc_ll_copy_src_de_dst_hlix
143   0000              	EXTERN ____sdcc_ll_copy_src_de_dst_hlsp
144   0000              	EXTERN ____sdcc_ll_copy_src_deix_dst_hl
145   0000              	EXTERN ____sdcc_ll_copy_src_deix_dst_hlix
146   0000              	EXTERN ____sdcc_ll_copy_src_deixm_dst_hlsp
147   0000              	EXTERN ____sdcc_ll_copy_src_desp_dst_hlsp
148   0000              	EXTERN ____sdcc_ll_copy_src_hl_dst_de
149   0000              	EXTERN ____sdcc_ll_copy_src_hlsp_dst_de
150   0000              	EXTERN ____sdcc_ll_copy_src_hlsp_dst_deixm
151   0000              	EXTERN ____sdcc_ll_lsl_hlix_a
152   0000              	EXTERN ____sdcc_ll_lsl_mbc_a
153   0000              	EXTERN ____sdcc_ll_lsr_hlix_a
154   0000              	EXTERN ____sdcc_ll_lsr_mbc_a
155   0000              	EXTERN ____sdcc_ll_push_hlix
156   0000              	EXTERN ____sdcc_ll_push_mhl
157   0000              	EXTERN ____sdcc_ll_sub_de_bc_hl
158   0000              	EXTERN ____sdcc_ll_sub_de_bc_hlix
159   0000              	EXTERN ____sdcc_ll_sub_de_hlix_bc
160   0000              	EXTERN ____sdcc_ll_sub_de_hlix_bcix
161   0000              	EXTERN ____sdcc_ll_sub_deix_bc_hl
162   0000              	EXTERN ____sdcc_ll_sub_deix_hlix
163   0000              	EXTERN ____sdcc_ll_sub_hlix_bc_deix
164   0000              	EXTERN ____sdcc_ll_sub_hlix_deix_bc
165   0000              	EXTERN ____sdcc_ll_sub_hlix_deix_bcix
166   0000              	EXTERN ____sdcc_load_debc_deix
167   0000              	EXTERN ____sdcc_load_dehl_deix
168   0000              	EXTERN ____sdcc_load_debc_mhl
169   0000              	EXTERN ____sdcc_load_hlde_mhl
170   0000              	EXTERN ____sdcc_store_dehl_bcix
171   0000              	EXTERN ____sdcc_store_debc_hlix
172   0000              	EXTERN ____sdcc_store_debc_mhl
173   0000              	EXTERN ____sdcc_cpu_pop_ei
174   0000              	EXTERN ____sdcc_cpu_pop_ei_jp
175   0000              	EXTERN ____sdcc_cpu_push_di
176   0000              	EXTERN ____sdcc_outi
177   0000              	EXTERN ____sdcc_outi_128
178   0000              	EXTERN ____sdcc_outi_256
179   0000              	EXTERN ____sdcc_ldi
180   0000              	EXTERN ____sdcc_ldi_128
181   0000              	EXTERN ____sdcc_ldi_256
182   0000              	EXTERN ____sdcc_4_copy_srcd_hlix_dst_deix
183   0000              	EXTERN ____sdcc_4_and_src_mbc_mhl_dst_deix
184   0000              	EXTERN ____sdcc_4_or_src_mbc_mhl_dst_deix
185   0000              	EXTERN ____sdcc_4_xor_src_mbc_mhl_dst_deix
186   0000              	EXTERN ____sdcc_4_or_src_dehl_dst_bcix
187   0000              	EXTERN ____sdcc_4_xor_src_dehl_dst_bcix
188   0000              	EXTERN ____sdcc_4_and_src_dehl_dst_bcix
189   0000              	EXTERN ____sdcc_4_xor_src_mbc_mhl_dst_debc
190   0000              	EXTERN ____sdcc_4_or_src_mbc_mhl_dst_debc
191   0000              	EXTERN ____sdcc_4_and_src_mbc_mhl_dst_debc
192   0000              	EXTERN ____sdcc_4_cpl_src_mhl_dst_debc
193   0000              	EXTERN ____sdcc_4_xor_src_debc_mhl_dst_debc
194   0000              	EXTERN ____sdcc_4_or_src_debc_mhl_dst_debc
195   0000              	EXTERN ____sdcc_4_and_src_debc_mhl_dst_debc
196   0000              	EXTERN ____sdcc_4_and_src_debc_hlix_dst_debc
197   0000              	EXTERN ____sdcc_4_or_src_debc_hlix_dst_debc
198   0000              	EXTERN ____sdcc_4_xor_src_debc_hlix_dst_debc
199   0000              
200   0000              ;--------------------------------------------------------
201   0000              ; Public variables in this module
202   0000              ;--------------------------------------------------------
203   0000              	GLOBAL _player_get_floor
204   0000              	GLOBAL _player_check_conveyor
205   0000              	GLOBAL _player_collision
206   0000              	GLOBAL _player_new_jump
207   0000              	GLOBAL _player_handle_fall
208   0000              	GLOBAL _player_handle_walk
209   0000              	GLOBAL _player_handle_lock
210   0000              	GLOBAL _player_check_exit
211   0000              	GLOBAL _player_debug_keys
212   0000              	GLOBAL _player_init
213   0000              	GLOBAL _player_turn
214   0000              	GLOBAL _player_move
215   0000              	GLOBAL _player_move_jump
216   0000              	GLOBAL _player_move_walk
217   0000              	GLOBAL _player_handle_conveyor
218   0000              	GLOBAL _player_pick
219   0000              	GLOBAL _player_check_input
220   0000              	GLOBAL _player_tile
221   0000              	GLOBAL _player_score_add
222   0000              	GLOBAL _player_pick_item
223   0000              	GLOBAL _player_pick_deadly
224   0000              	GLOBAL _player_pick_extra
225   0000              	GLOBAL _player_check_ceil
226   0000              	GLOBAL _player_check_floor
227   0000              	GLOBAL _player_lost_life
228   0000              ;--------------------------------------------------------
229   0000              ; Externals used
230   0000              ;--------------------------------------------------------
231   0000              	GLOBAL _ulltoa_callee
232   0000              	GLOBAL _ulltoa
233   0000              	GLOBAL _strtoull_callee
234   0000              	GLOBAL _strtoull
235   0000              	GLOBAL _strtoll_callee
236   0000              	GLOBAL _strtoll
237   0000              	GLOBAL _lltoa_callee
238   0000              	GLOBAL _lltoa
239   0000              	GLOBAL _llabs_callee
240   0000              	GLOBAL _llabs
241   0000              	GLOBAL __lldivu__callee
242   0000              	GLOBAL __lldivu_
243   0000              	GLOBAL __lldiv__callee
244   0000              	GLOBAL __lldiv_
245   0000              	GLOBAL _atoll_callee
246   0000              	GLOBAL _atoll
247   0000              	GLOBAL _realloc_unlocked_callee
248   0000              	GLOBAL _realloc_unlocked
249   0000              	GLOBAL _malloc_unlocked_fastcall
250   0000              	GLOBAL _malloc_unlocked
251   0000              	GLOBAL _free_unlocked_fastcall
252   0000              	GLOBAL _free_unlocked
253   0000              	GLOBAL _calloc_unlocked_callee
254   0000              	GLOBAL _calloc_unlocked
255   0000              	GLOBAL _aligned_alloc_unlocked_callee
256   0000              	GLOBAL _aligned_alloc_unlocked
257   0000              	GLOBAL _realloc_callee
258   0000              	GLOBAL _realloc
259   0000              	GLOBAL _malloc_fastcall
260   0000              	GLOBAL _malloc
261   0000              	GLOBAL _free_fastcall
262   0000              	GLOBAL _free
263   0000              	GLOBAL _calloc_callee
264   0000              	GLOBAL _calloc
265   0000              	GLOBAL _aligned_alloc_callee
266   0000              	GLOBAL _aligned_alloc
267   0000              	GLOBAL _utoa_callee
268   0000              	GLOBAL _utoa
269   0000              	GLOBAL _ultoa_callee
270   0000              	GLOBAL _ultoa
271   0000              	GLOBAL _system_fastcall
272   0000              	GLOBAL _system
273   0000              	GLOBAL _strtoul_callee
274   0000              	GLOBAL _strtoul
275   0000              	GLOBAL _strtol_callee
276   0000              	GLOBAL _strtol
277   0000              	GLOBAL _strtof_callee
278   0000              	GLOBAL _strtof
279   0000              	GLOBAL _strtod_callee
280   0000              	GLOBAL _strtod
281   0000              	GLOBAL _srand_fastcall
282   0000              	GLOBAL _srand
283   0000              	GLOBAL _rand
284   0000              	GLOBAL _quick_exit_fastcall
285   0000              	GLOBAL _quick_exit
286   0000              	GLOBAL _qsort_callee
287   0000              	GLOBAL _qsort
288   0000              	GLOBAL _ltoa_callee
289   0000              	GLOBAL _ltoa
290   0000              	GLOBAL _labs_fastcall
291   0000              	GLOBAL _labs
292   0000              	GLOBAL _itoa_callee
293   0000              	GLOBAL _itoa
294   0000              	GLOBAL _ftoh_callee
295   0000              	GLOBAL _ftoh
296   0000              	GLOBAL _ftog_callee
297   0000              	GLOBAL _ftog
298   0000              	GLOBAL _ftoe_callee
299   0000              	GLOBAL _ftoe
300   0000              	GLOBAL _ftoa_callee
301   0000              	GLOBAL _ftoa
302   0000              	GLOBAL _exit_fastcall
303   0000              	GLOBAL _exit
304   0000              	GLOBAL _dtoh_callee
305   0000              	GLOBAL _dtoh
306   0000              	GLOBAL _dtog_callee
307   0000              	GLOBAL _dtog
308   0000              	GLOBAL _dtoe_callee
309   0000              	GLOBAL _dtoe
310   0000              	GLOBAL _dtoa_callee
311   0000              	GLOBAL _dtoa
312   0000              	GLOBAL _bsearch_callee
313   0000              	GLOBAL _bsearch
314   0000              	GLOBAL _atol_fastcall
315   0000              	GLOBAL _atol
316   0000              	GLOBAL _atoi_fastcall
317   0000              	GLOBAL _atoi
318   0000              	GLOBAL _atof_fastcall
319   0000              	GLOBAL _atof
320   0000              	GLOBAL _atexit_fastcall
321   0000              	GLOBAL _atexit
322   0000              	GLOBAL _at_quick_exit_fastcall
323   0000              	GLOBAL _at_quick_exit
324   0000              	GLOBAL _abs_fastcall
325   0000              	GLOBAL _abs
326   0000              	GLOBAL _abort
327   0000              	GLOBAL __strtou__callee
328   0000              	GLOBAL __strtou_
329   0000              	GLOBAL __strtoi__callee
330   0000              	GLOBAL __strtoi_
331   0000              	GLOBAL __random_uniform_xor_8__fastcall
332   0000              	GLOBAL __random_uniform_xor_8_
333   0000              	GLOBAL __random_uniform_xor_32__fastcall
334   0000              	GLOBAL __random_uniform_xor_32_
335   0000              	GLOBAL __random_uniform_cmwc_8__fastcall
336   0000              	GLOBAL __random_uniform_cmwc_8_
337   0000              	GLOBAL __shellsort__callee
338   0000              	GLOBAL __shellsort_
339   0000              	GLOBAL __quicksort__callee
340   0000              	GLOBAL __quicksort_
341   0000              	GLOBAL __insertion_sort__callee
342   0000              	GLOBAL __insertion_sort_
343   0000              	GLOBAL __ldivu__callee
344   0000              	GLOBAL __ldivu_
345   0000              	GLOBAL __ldiv__callee
346   0000              	GLOBAL __ldiv_
347   0000              	GLOBAL __divu__callee
348   0000              	GLOBAL __divu_
349   0000              	GLOBAL __div__callee
350   0000              	GLOBAL __div_
351   0000              	GLOBAL _NIRVANAP_drawTW_raw_callee
352   0000              	GLOBAL _NIRVANAP_drawTW_raw
353   0000              	GLOBAL _NIRVANAP_drawTW_callee
354   0000              	GLOBAL _NIRVANAP_drawTW
355   0000              	GLOBAL _NIRVANAP_drawW_raw_callee
356   0000              	GLOBAL _NIRVANAP_drawW_raw
357   0000              	GLOBAL _NIRVANAP_drawW_callee
358   0000              	GLOBAL _NIRVANAP_drawW
359   0000              	GLOBAL _NIRVANAP_spriteT_callee
360   0000              	GLOBAL _NIRVANAP_spriteT
361   0000              	GLOBAL _NIRVANAP_fillC_callee
362   0000              	GLOBAL _NIRVANAP_fillC
363   0000              	GLOBAL _NIRVANAP_readC_callee
364   0000              	GLOBAL _NIRVANAP_readC
365   0000              	GLOBAL _NIRVANAP_paintC_callee
366   0000              	GLOBAL _NIRVANAP_paintC
367   0000              	GLOBAL _NIRVANAP_printQ_callee
368   0000              	GLOBAL _NIRVANAP_printQ
369   0000              	GLOBAL _NIRVANAP_fillT_raw_callee
370   0000              	GLOBAL _NIRVANAP_fillT_raw
371   0000              	GLOBAL _NIRVANAP_fillT_callee
372   0000              	GLOBAL _NIRVANAP_fillT
373   0000              	GLOBAL _NIRVANAP_drawT_raw_callee
374   0000              	GLOBAL _NIRVANAP_drawT_raw
375   0000              	GLOBAL _NIRVANAP_drawT_callee
376   0000              	GLOBAL _NIRVANAP_drawT
377   0000              	GLOBAL _NIRVANAP_stop
378   0000              	GLOBAL _NIRVANAP_start
379   0000              	GLOBAL _zx_print_str
380   0000              	GLOBAL _zx_print_int
381   0000              	GLOBAL _zx_print_chr
382   0000              	GLOBAL _zx_isr
383   0000              	GLOBAL _z80_otdr_callee
384   0000              	GLOBAL _z80_otdr
385   0000              	GLOBAL _z80_otir_callee
386   0000              	GLOBAL _z80_otir
387   0000              	GLOBAL _z80_outp_callee
388   0000              	GLOBAL _z80_outp
389   0000              	GLOBAL _z80_indr_callee
390   0000              	GLOBAL _z80_indr
391   0000              	GLOBAL _z80_inir_callee
392   0000              	GLOBAL _z80_inir
393   0000              	GLOBAL _z80_inp_fastcall
394   0000              	GLOBAL _z80_inp
395   0000              	GLOBAL _z80_set_int_state_fastcall
396   0000              	GLOBAL _z80_set_int_state
397   0000              	GLOBAL _z80_get_int_state
398   0000              	GLOBAL _z80_delay_tstate_fastcall
399   0000              	GLOBAL _z80_delay_tstate
400   0000              	GLOBAL _z80_delay_ms_fastcall
401   0000              	GLOBAL _z80_delay_ms
402   0000              	GLOBAL _im2_remove_generic_callback_callee
403   0000              	GLOBAL _im2_remove_generic_callback
404   0000              	GLOBAL _im2_prepend_generic_callback_callee
405   0000              	GLOBAL _im2_prepend_generic_callback
406   0000              	GLOBAL _im2_append_generic_callback_callee
407   0000              	GLOBAL _im2_append_generic_callback
408   0000              	GLOBAL _im2_create_generic_isr_8080_callee
409   0000              	GLOBAL _im2_create_generic_isr_8080
410   0000              	GLOBAL _im2_create_generic_isr_callee
411   0000              	GLOBAL _im2_create_generic_isr
412   0000              	GLOBAL _im2_install_isr_callee
413   0000              	GLOBAL _im2_install_isr
414   0000              	GLOBAL _im2_init_fastcall
415   0000              	GLOBAL _im2_init
416   0000              	GLOBAL _intrinsic_swap_word_32_fastcall
417   0000              	GLOBAL _intrinsic_swap_word_32
418   0000              	GLOBAL _intrinsic_swap_endian_32_fastcall
419   0000              	GLOBAL _intrinsic_swap_endian_32
420   0000              	GLOBAL _intrinsic_swap_endian_16_fastcall
421   0000              	GLOBAL _intrinsic_swap_endian_16
422   0000              	GLOBAL _intrinsic_return_de
423   0000              	GLOBAL _intrinsic_return_bc
424   0000              	GLOBAL _intrinsic_exx
425   0000              	GLOBAL _intrinsic_ex_de_hl
426   0000              	GLOBAL _intrinsic_nop
427   0000              	GLOBAL _intrinsic_im_2
428   0000              	GLOBAL _intrinsic_im_1
429   0000              	GLOBAL _intrinsic_im_0
430   0000              	GLOBAL _intrinsic_retn
431   0000              	GLOBAL _intrinsic_reti
432   0000              	GLOBAL _intrinsic_halt
433   0000              	GLOBAL _intrinsic_ei
434   0000              	GLOBAL _intrinsic_di
435   0000              	GLOBAL _intrinsic_stub
436   0000              	GLOBAL _intrinsic_ini
437   0000              	GLOBAL _intrinsic_outi
438   0000              	GLOBAL _intrinsic_ldi
439   0000              	GLOBAL _zx_pattern_fill_callee
440   0000              	GLOBAL _zx_pattern_fill
441   0000              	GLOBAL _zx_saddrpup_fastcall
442   0000              	GLOBAL _zx_saddrpup
443   0000              	GLOBAL _zx_saddrpright_callee
444   0000              	GLOBAL _zx_saddrpright
445   0000              	GLOBAL _zx_saddrpleft_callee
446   0000              	GLOBAL _zx_saddrpleft
447   0000              	GLOBAL _zx_saddrpdown_fastcall
448   0000              	GLOBAL _zx_saddrpdown
449   0000              	GLOBAL _zx_saddrcup_fastcall
450   0000              	GLOBAL _zx_saddrcup
451   0000              	GLOBAL _zx_saddrcright_fastcall
452   0000              	GLOBAL _zx_saddrcright
453   0000              	GLOBAL _zx_saddrcleft_fastcall
454   0000              	GLOBAL _zx_saddrcleft
455   0000              	GLOBAL _zx_saddrcdown_fastcall
456   0000              	GLOBAL _zx_saddrcdown
457   0000              	GLOBAL _zx_saddr2py_fastcall
458   0000              	GLOBAL _zx_saddr2py
459   0000              	GLOBAL _zx_saddr2px_fastcall
460   0000              	GLOBAL _zx_saddr2px
461   0000              	GLOBAL _zx_saddr2cy_fastcall
462   0000              	GLOBAL _zx_saddr2cy
463   0000              	GLOBAL _zx_saddr2cx_fastcall
464   0000              	GLOBAL _zx_saddr2cx
465   0000              	GLOBAL _zx_saddr2aaddr_fastcall
466   0000              	GLOBAL _zx_saddr2aaddr
467   0000              	GLOBAL _zx_py2saddr_fastcall
468   0000              	GLOBAL _zx_py2saddr
469   0000              	GLOBAL _zx_py2aaddr_fastcall
470   0000              	GLOBAL _zx_py2aaddr
471   0000              	GLOBAL _zx_pxy2saddr_callee
472   0000              	GLOBAL _zx_pxy2saddr
473   0000              	GLOBAL _zx_pxy2aaddr_callee
474   0000              	GLOBAL _zx_pxy2aaddr
475   0000              	GLOBAL _zx_px2bitmask_fastcall
476   0000              	GLOBAL _zx_px2bitmask
477   0000              	GLOBAL _zx_cy2saddr_fastcall
478   0000              	GLOBAL _zx_cy2saddr
479   0000              	GLOBAL _zx_cy2aaddr_fastcall
480   0000              	GLOBAL _zx_cy2aaddr
481   0000              	GLOBAL _zx_cxy2saddr_callee
482   0000              	GLOBAL _zx_cxy2saddr
483   0000              	GLOBAL _zx_cxy2aaddr_callee
484   0000              	GLOBAL _zx_cxy2aaddr
485   0000              	GLOBAL _zx_bitmask2px_fastcall
486   0000              	GLOBAL _zx_bitmask2px
487   0000              	GLOBAL _zx_aaddrcup_fastcall
488   0000              	GLOBAL _zx_aaddrcup
489   0000              	GLOBAL _zx_aaddrcright_fastcall
490   0000              	GLOBAL _zx_aaddrcright
491   0000              	GLOBAL _zx_aaddrcleft_fastcall
492   0000              	GLOBAL _zx_aaddrcleft
493   0000              	GLOBAL _zx_aaddrcdown_fastcall
494   0000              	GLOBAL _zx_aaddrcdown
495   0000              	GLOBAL _zx_aaddr2saddr_fastcall
496   0000              	GLOBAL _zx_aaddr2saddr
497   0000              	GLOBAL _zx_aaddr2py_fastcall
498   0000              	GLOBAL _zx_aaddr2py
499   0000              	GLOBAL _zx_aaddr2px_fastcall
500   0000              	GLOBAL _zx_aaddr2px
501   0000              	GLOBAL _zx_aaddr2cy_fastcall
502   0000              	GLOBAL _zx_aaddr2cy
503   0000              	GLOBAL _zx_aaddr2cx_fastcall
504   0000              	GLOBAL _zx_aaddr2cx
505   0000              	GLOBAL _zx_visit_wc_pix_callee
506   0000              	GLOBAL _zx_visit_wc_pix
507   0000              	GLOBAL _zx_visit_wc_attr_callee
508   0000              	GLOBAL _zx_visit_wc_attr
509   0000              	GLOBAL _zx_scroll_wc_up_pix_callee
510   0000              	GLOBAL _zx_scroll_wc_up_pix
511   0000              	GLOBAL _zx_scroll_wc_up_attr_callee
512   0000              	GLOBAL _zx_scroll_wc_up_attr
513   0000              	GLOBAL _zx_scroll_wc_up_callee
514   0000              	GLOBAL _zx_scroll_wc_up
515   0000              	GLOBAL _zx_scroll_up_pix_callee
516   0000              	GLOBAL _zx_scroll_up_pix
517   0000              	GLOBAL _zx_scroll_up_attr_callee
518   0000              	GLOBAL _zx_scroll_up_attr
519   0000              	GLOBAL _zx_scroll_up_callee
520   0000              	GLOBAL _zx_scroll_up
521   0000              	GLOBAL _zx_cls_wc_pix_callee
522   0000              	GLOBAL _zx_cls_wc_pix
523   0000              	GLOBAL _zx_cls_wc_attr_callee
524   0000              	GLOBAL _zx_cls_wc_attr
525   0000              	GLOBAL _zx_cls_wc_callee
526   0000              	GLOBAL _zx_cls_wc
527   0000              	GLOBAL _zx_cls_pix_fastcall
528   0000              	GLOBAL _zx_cls_pix
529   0000              	GLOBAL _zx_cls_attr_fastcall
530   0000              	GLOBAL _zx_cls_attr
531   0000              	GLOBAL _zx_cls_fastcall
532   0000              	GLOBAL _zx_cls
533   0000              	GLOBAL _zx_border_fastcall
534   0000              	GLOBAL _zx_border
535   0000              	GLOBAL _zx_tape_verify_block_callee
536   0000              	GLOBAL _zx_tape_verify_block
537   0000              	GLOBAL _zx_tape_save_block_callee
538   0000              	GLOBAL _zx_tape_save_block
539   0000              	GLOBAL _zx_tape_load_block_callee
540   0000              	GLOBAL _zx_tape_load_block
541   0000              	GLOBAL _spr_horizontal_check
542   0000              	GLOBAL _spr_draw8
543   0000              	GLOBAL _spr_destroy
544   0000              	GLOBAL _spr_turn_horizontal
545   0000              	GLOBAL _spr_clear_scr
546   0000              	GLOBAL _spr_back_repaint
547   0000              	GLOBAL _spr_get_tile_dir
548   0000              	GLOBAL _spr_get_tile
549   0000              	GLOBAL _spr_paint_player
550   0000              	GLOBAL _spr_clear_fast_hor
551   0000              	GLOBAL _spr_clear_fast_vert
552   0000              	GLOBAL _spr_clear_fast
553   0000              	GLOBAL _spr_paint
554   0000              	GLOBAL _spr_move_left
555   0000              	GLOBAL _spr_move_right
556   0000              	GLOBAL _spr_move_left_f
557   0000              	GLOBAL _spr_move_right_f
558   0000              	GLOBAL _spr_move_horizontal
559   0000              	GLOBAL _spr_move_down_f
560   0000              	GLOBAL _spr_move_up_f
561   0000              	GLOBAL _spr_set_right
562   0000              	GLOBAL _spr_set_left
563   0000              	GLOBAL _spr_set_down
564   0000              	GLOBAL _spr_set_up
565   0000              	GLOBAL _spr_calc_index
566   0000              	GLOBAL _spr_chktime
567   0000              	GLOBAL _player_use_floor
568   0000              	GLOBAL _reverse
569   0000              	GLOBAL _page
570   0000              	GLOBAL _game_set_attr
571   0000              	GLOBAL _game_solar_ray0
572   0000              	GLOBAL _game_solar_ray1
573   0000              	GLOBAL _game_solar_ray
574   0000              	GLOBAL _game_anim_air
575   0000              	GLOBAL _game_shoe
576   0000              	GLOBAL _game_intro
577   0000              	GLOBAL _game_copy_sprite
578   0000              	GLOBAL _game_copy_sprite_color_reset
579   0000              	GLOBAL _game_copy_sprite_std
580   0000              	GLOBAL _game_flash_exit
581   0000              	GLOBAL _game_page_map
582   0000              	GLOBAL _game_attribs
583   0000              	GLOBAL _game_print_header
584   0000              	GLOBAL _game_check_time
585   0000              	GLOBAL _game_key_paint
586   0000              	GLOBAL _game_colour_message
587   0000              	GLOBAL _game_paint_attrib
588   0000              	GLOBAL _game_print_score
589   0000              	GLOBAL _game_cell_paint_index
590   0000              	GLOBAL _game_cell_paint
591   0000              	GLOBAL _game_check_cell
592   0000              	GLOBAL _game_check_map
593   0000              	GLOBAL _game_loop
594   0000              	GLOBAL _game_round_init
595   0000              	GLOBAL _game_start_timer
596   0000              	GLOBAL _game_update_stats
597   0000              	GLOBAL _game_print_footer
598   0000              	GLOBAL _game_fill_row
599   0000              	GLOBAL _game_cls
600   0000              	GLOBAL _game_fps
601   0000              	GLOBAL _game_draw_map
602   0000              	GLOBAL _enemy_init
603   0000              	GLOBAL _enemy_move
604   0000              	GLOBAL _enemy_turn
605   0000              	GLOBAL _enemy_static
606   0000              	GLOBAL _enemy_horizontal
607   0000              	GLOBAL _enemy_vertical
608   0000              	GLOBAL _ay_reset
609   0000              	GLOBAL _ay_song_stop
610   0000              	GLOBAL _ay_song_play
611   0000              	GLOBAL _ay_fx_stop
612   0000              	GLOBAL _ay_fx_play
613   0000              	GLOBAL _ay_is_playing
614   0000              	GLOBAL _audio_game_over
615   0000              	GLOBAL _audio_round_init
616   0000              	GLOBAL _audio_levelup
617   0000              	GLOBAL _audio_menu
618   0000              	GLOBAL _audio_game_end
619   0000              	GLOBAL _audio_game_start
620   0000              	GLOBAL _audio_level_complete
621   0000              	GLOBAL _audio_level_start
622   0000              	GLOBAL _audio_puerta
623   0000              	GLOBAL _audio_crumble
624   0000              	GLOBAL _audio_tick
625   0000              	GLOBAL _audio_door_open
626   0000              	GLOBAL _audio_coin_noentiendo
627   0000              	GLOBAL _audio_coin
628   0000              	GLOBAL _audio_fall
629   0000              	GLOBAL _audio_jump
630   0000              	GLOBAL _audio_dead
631   0000              	GLOBAL _audio_time
632   0000              	GLOBAL _audio_ingame
633   0000              	GLOBAL _test_func
634   0000              	GLOBAL _test_proc
635   0000              	GLOBAL _in_mouse_kempston_wheel_delta
636   0000              	GLOBAL _in_mouse_kempston_wheel
637   0000              	GLOBAL _in_mouse_kempston_callee
638   0000              	GLOBAL _in_mouse_kempston
639   0000              	GLOBAL _in_mouse_kempston_setpos_callee
640   0000              	GLOBAL _in_mouse_kempston_setpos
641   0000              	GLOBAL _in_mouse_kempston_reset
642   0000              	GLOBAL _in_mouse_kempston_init
643   0000              	GLOBAL _in_mouse_amx_wheel_delta
644   0000              	GLOBAL _in_mouse_amx_wheel
645   0000              	GLOBAL _in_mouse_amx_callee
646   0000              	GLOBAL _in_mouse_amx
647   0000              	GLOBAL _in_mouse_amx_setpos_callee
648   0000              	GLOBAL _in_mouse_amx_setpos
649   0000              	GLOBAL _in_mouse_amx_reset
650   0000              	GLOBAL _in_mouse_amx_init_callee
651   0000              	GLOBAL _in_mouse_amx_init
652   0000              	GLOBAL _in_stick_sinclair2
653   0000              	GLOBAL _in_stick_sinclair1
654   0000              	GLOBAL _in_stick_kempston
655   0000              	GLOBAL _in_stick_fuller
656   0000              	GLOBAL _in_stick_cursor
657   0000              	GLOBAL _in_stick_keyboard_fastcall
658   0000              	GLOBAL _in_stick_keyboard
659   0000              	GLOBAL _in_wait_nokey
660   0000              	GLOBAL _in_wait_key
661   0000              	GLOBAL _in_test_key
662   0000              	GLOBAL _in_pause_fastcall
663   0000              	GLOBAL _in_pause
664   0000              	GLOBAL _in_key_scancode_fastcall
665   0000              	GLOBAL _in_key_scancode
666   0000              	GLOBAL _in_key_pressed_fastcall
667   0000              	GLOBAL _in_key_pressed
668   0000              	GLOBAL _in_inkey
669   0000              	GLOBAL _NIRVANAP_CHAR_TABLE
670   0000              	GLOBAL _NIRVANAP_WIDE_IMAGES
671   0000              	GLOBAL _NIRVANAP_TILE_IMAGES
672   0000              	GLOBAL _NIRVANAP_HOLE
673   0000              	GLOBAL _NIRVANAP_ISR_HOOK
674   0000              	GLOBAL _deltas
675   0000              	GLOBAL _attribs
676   0000              	GLOBAL _air_curr_byte
677   0000              	GLOBAL _spr_clr
678   0000              	GLOBAL _spr_init_bright
679   0000              	GLOBAL _spr_init_cout3
680   0000              	GLOBAL _spr_init_cin3
681   0000              	GLOBAL _spr_init_cout2
682   0000              	GLOBAL _spr_init_cin2
683   0000              	GLOBAL _spr_init_cout1
684   0000              	GLOBAL _spr_init_cin1
685   0000              	GLOBAL _spr_init_cout0
686   0000              	GLOBAL _spr_init_cin0
687   0000              	GLOBAL _map_paper
688   0000              	GLOBAL _map_border
689   0000              	GLOBAL _scr_curr
690   0000              	GLOBAL _scr_map
691   0000              	GLOBAL _spr_kind
692   0000              	GLOBAL _spr_altset
693   0000              	GLOBAL _spr_frames
694   0000              	GLOBAL _spr_speed_a
695   0000              	GLOBAL _spr_speed_b
696   0000              	GLOBAL _spr_speed
697   0000              	GLOBAL _spr_tile
698   0000              	GLOBAL _screen_ink
699   0000              	GLOBAL _screen_paper
700   0000              	GLOBAL _game_start_scr
701   0000              	GLOBAL _game_score_top
702   0000              	GLOBAL _player_coins
703   0000              	GLOBAL _player_lives
704   0000              	GLOBAL _game_over
705   0000              	GLOBAL _game_tile_cnt
706   0000              	GLOBAL _game_sound
707   0000              	GLOBAL _game_inf_lives
708   0000              	GLOBAL _game_inmune
709   0000              	GLOBAL _spr_count
710   0000              	GLOBAL _key_ink
711   0000              	GLOBAL _key_last
712   0000              	GLOBAL _time_key
713   0000              	GLOBAL _time_conv
714   0000              	GLOBAL _time_air
715   0000              	GLOBAL _frame_time
716   0000              	GLOBAL _curr_time
717   0000              	GLOBAL _key_attrib
718   0000              	GLOBAL _g_ray1
719   0000              	GLOBAL _attrib_sol1
720   0000              	GLOBAL _attrib_sol0
721   0000              	GLOBAL _attrib_osd
722   0000              	GLOBAL _attrib_hl
723   0000              	GLOBAL _attrib
724   0000              	GLOBAL _zx_val_asm
725   0000              	GLOBAL _index1
726   0000              	GLOBAL _index0
727   0000              	GLOBAL _loop_count
728   0000              	GLOBAL _s_row1
729   0000              	GLOBAL _s_col1
730   0000              	GLOBAL _s_col0
731   0000              	GLOBAL _s_lin1
732   0000              	GLOBAL _s_lin0
733   0000              	GLOBAL _nirv_sprite_index
734   0000              	GLOBAL _player_kill_index
735   0000              	GLOBAL _player_jump_top
736   0000              	GLOBAL _game_fps_show
737   0000              	GLOBAL _game_debug
738   0000              	GLOBAL _sprite
739   0000              	GLOBAL _fps
740   0000              	GLOBAL _game_mode
741   0000              	GLOBAL _game_tileset
742   0000              	GLOBAL _menu_curr_sel
743   0000              	GLOBAL _game_round_up
744   0000              	GLOBAL _game_exit_lin
745   0000              	GLOBAL _game_exit_col
746   0000              	GLOBAL _game_conveyor_col1
747   0000              	GLOBAL _game_conveyor_col0
748   0000              	GLOBAL _game_conveyor_lin
749   0000              	GLOBAL _game_conveyor_dir
750   0000              	GLOBAL _game_song_play_start
751   0000              	GLOBAL _game_song_play
752   0000              	GLOBAL _game_gravity
753   0000              	GLOBAL _player_lin_scr
754   0000              	GLOBAL _player_col_scr
755   0000              	GLOBAL _player_fall_start
756   0000              	GLOBAL _player_jump_count
757   0000              	GLOBAL _player_jump_hack
758   0000              	GLOBAL _player_vel_inc
759   0000              	GLOBAL _player_vel_y0
760   0000              	GLOBAL _player_vel_y
761   0000              	GLOBAL _player_score
762   0000              	GLOBAL _tbuffer
763   0000              	GLOBAL _obj_count
764   0000              	GLOBAL _obj_col
765   0000              	GLOBAL _obj_lin
766   0000              	GLOBAL _last_time_b
767   0000              	GLOBAL _last_time_a
768   0000              	GLOBAL _last_time
769   0000              	GLOBAL _colint
770   0000              	GLOBAL _col
771   0000              	GLOBAL _lin
772   0000              	GLOBAL _tile
773   0000              	GLOBAL _value_c
774   0000              	GLOBAL _value_b
775   0000              	GLOBAL _value_a
776   0000              	GLOBAL _state_a
777   0000              	GLOBAL _state
778   0000              	GLOBAL _class
779   0000              	GLOBAL _dirs_last
780   0000              	GLOBAL _dirs
781   0000              	GLOBAL _k1
782   0000              	GLOBAL _joyfunc1
783   0000              	GLOBAL _btiles
784   0000              	GLOBAL _v3
785   0000              	GLOBAL _v2
786   0000              	GLOBAL _v1
787   0000              	GLOBAL _v0
788   0000              	GLOBAL _i
789   0000              	GLOBAL _spec128
790   0000              	GLOBAL _GLOBAL_ZX_PORT_7FFD
791   0000              	GLOBAL _GLOBAL_ZX_PORT_1FFD
792   0000              	GLOBAL _GLOBAL_ZX_PORT_FE
793   0000              	GLOBAL _hitiles2
794   0000              	GLOBAL _hitiles1
795   0000              	GLOBAL _ay_song_coin_noentiendo
796   0000              	GLOBAL _ay_song_game_over
797   0000              	GLOBAL _ay_song_time_atack
798   0000              	GLOBAL _ay_fx_crumble
799   0000              	GLOBAL _ay_fx_door_open
800   0000              	GLOBAL _ay_fx_tick
801   0000              	GLOBAL _ay_fx_game_start
802   0000              	GLOBAL _ay_fx_fall
803   0000              	GLOBAL _ay_fx_jump
804   0000              	GLOBAL _ay_fx_dead
805   0000              	GLOBAL _ay_fx_coin
806   0000              	GLOBAL _ay_song_round_init
807   0000              	GLOBAL _ay_song_menu
808   0000              	GLOBAL _ay_song_ingame1
809   0000              	GLOBAL _ay_song_ingame0
810   0000              	GLOBAL _hisprites2
811   0000              	GLOBAL _hisprites1
812   0000              	GLOBAL _img1
813   0000              	GLOBAL _air_end_byte
814   0000              	GLOBAL _air_start_byte
815   0000              	GLOBAL _tile_class
816   0000              	GLOBAL _scan_map
817   0000              	GLOBAL _key_map
818   0000              	GLOBAL _map_names0
819   0000              	GLOBAL _game_borders0
820   0000              	GLOBAL _paper0
821   0000              	GLOBAL _lenght0
822   0000              	GLOBAL _world0
823   0000              	GLOBAL _spr_init2
824   0000              	GLOBAL _spr_init1
825   0000              	GLOBAL _player_jump_hor
826   0000              ;--------------------------------------------------------
827   0000              ; special function registers
828   0000              ;--------------------------------------------------------
829   0000              defc _IO_FE	=	0x00fe
830   0000              defc _IO_1FFD	=	0x1ffd
831   0000              defc _IO_7FFD	=	0x7ffd
832   0000              ;--------------------------------------------------------
833   0000              ; ram data
834   0000              ;--------------------------------------------------------
835   0000              	SECTION bss_compiler
836   0000              ;--------------------------------------------------------
837   0000              ; ram data
838   0000              ;--------------------------------------------------------
839   0000              
840   0000              IF 0
841   0000              
842   0000              ; .area _INITIALIZED removed by z88dk
843   0000              
844   0000              
845   0000              ENDIF
846   0000              
847   0000              ;--------------------------------------------------------
848   0000              ; absolute external ram data
849   0000              ;--------------------------------------------------------
850   0000              	SECTION IGNORE
851   0000              ;--------------------------------------------------------
852   0000              ; global & static initialisations
853   0000              ;--------------------------------------------------------
854   0000              	SECTION code_crt_init
855   0000              ;--------------------------------------------------------
856   0000              ; Home
857   0000              ;--------------------------------------------------------
858   0000              	SECTION IGNORE
859   0000              ;--------------------------------------------------------
860   0000              ; code
861   0000              ;--------------------------------------------------------
862   0000              	SECTION code_compiler
863   0000              ;	---------------------------------
864   0000              ; Function player_init
865   0000              ; ---------------------------------
866   0000              _player_init:
867   0000  CD 00 00    	call	___sdcc_enter_ix
868   0003  F5          	push	af
869   0004  21 08 00    	ld	hl, +(_class + 0x0008)
870   0007  36 FF       	ld	(hl),0xff
871   0009  21 08 00    	ld	hl, +(_spr_speed + 0x0008)
872   000C  36 04       	ld	(hl),0x04
873   000E  21 08 00    	ld	hl, +(_spr_frames + 0x0008)
874   0011  36 04       	ld	(hl),0x04
875   0013  21 08 00    	ld	hl, +(_lin + 0x0008)
876   0016  DD 7E 04    	ld	a,(ix+4)
877   0019  77          	ld	(hl), a
878   001A  21 08 00    	ld	hl, +(_col + 0x0008)
879   001D  DD 7E 05    	ld	a,(ix+5)
880   0020  77          	ld	(hl), a
881   0021  DD 7E 04    	ld	a,(ix+4)
882   0024  32 00 00    	ld	(_player_jump_top),a
883   0027  01 08 00    	ld	bc,_state+8
884   002A  AF          	xor	a, a
885   002B  02          	ld	(bc), a
886   002C  11 08 00    	ld	de,_state_a+8
887   002F  AF          	xor	a, a
888   0030  12          	ld	(de), a
889   0031  2A 00 00    	ld	hl,(_curr_time)
890   0034  C5          	push	bc
891   0035  D5          	push	de
892   0036  DD 74 FF    	ld	(ix-1),h
893   0039  DD 75 FE    	ld	(ix-2),l
894   003C  D1          	pop	de
895   003D  C1          	pop	bc
896   003E  21 10 00    	ld	hl, +(_last_time + 0x0010)
897   0041  DD 7E FE    	ld	a,(ix-2)
898   0044  77          	ld	(hl), a
899   0045  23          	inc	hl
900   0046  DD 7E FF    	ld	a,(ix-1)
901   0049  77          	ld	(hl), a
902   004A  21 00 00    	ld	hl,0x0000
903   004D  22 00 00    	ld	(_player_vel_y),hl
904   0050  21 08 00    	ld	hl, +(_spr_frames + 0x0008)
905   0053  36 04       	ld	(hl),0x04
906   0055  3A 08 00    	ld	a,(_value_a + 0x0008)
907   0058  DD 77 FE    	ld	(ix-2),a
908   005B  B7          	or	a, a
909   005C  28 1C       	jr	Z,l_player_init_00102
910   005E  21 08 00    	ld	hl, +(_colint + 0x0008)
911   0061  36 03       	ld	(hl),0x03
912   0063  0A          	ld	a, (bc)
913   0064  F6 08       	or	a,0x08
914   0066  02          	ld	(bc), a
915   0067  1A          	ld	a, (de)
916   0068  F6 08       	or	a,0x08
917   006A  12          	ld	(de), a
918   006B  01 08 00    	ld	bc,_tile+8
919   006E  DD 7E 06    	ld	a,(ix+6)
920   0071  C6 04       	add	a,0x04
921   0073  02          	ld	(bc), a
922   0074  3A 08 00    	ld	a,(_value_b + 0x0008)
923   0077  77          	ld	(hl), a
924   0078  18 15       	jr	l_player_init_00104
925   007A              l_player_init_00102:
926   007A  0A          	ld	a, (bc)
927   007B  F6 04       	or	a,0x04
928   007D  02          	ld	(bc), a
929   007E  1A          	ld	a, (de)
930   007F  F6 10       	or	a,0x10
931   0081  12          	ld	(de), a
932   0082  21 08 00    	ld	hl, +(_tile + 0x0008)
933   0085  DD 7E 06    	ld	a,(ix+6)
934   0088  77          	ld	(hl), a
935   0089  3A 08 00    	ld	a,(_value_b + 0x0008)
936   008C  32 08 00    	ld	(_colint+8),a
937   008F              l_player_init_00104:
938   008F  F1          	pop	af
939   0090  DD E1       	pop	ix
940   0092  C9          	ret
941   0093              	SECTION code_compiler
942   0093              ;	---------------------------------
943   0093              ; Function player_turn
944   0093              ; ---------------------------------
945   0093              _player_turn:
946   0093  21 00 00    	ld	hl,_sprite
947   0096  36 08       	ld	(hl),0x08
948   0098  CD 00 00    	call	_spr_chktime
949   009B  7D          	ld	a, l
950   009C  B7          	or	a, a
951   009D  28 41       	jr	Z,l_player_turn_00106
952   009F  3A 08 00    	ld	a,(_lin + 0x0008)
953   00A2  32 00 00    	ld	(_s_lin0),a
954   00A5  3A 08 00    	ld	a,(_col + 0x0008)
955   00A8  32 00 00    	ld	(_s_col0),a
956   00AB  21 00 00    	ld	hl,_k1
957   00AE  E5          	push	hl
958   00AF  2A 00 00    	ld	hl,(_joyfunc1)
959   00B2  CD 00 00    	call	___sdcc_call_hl
960   00B5  F1          	pop	af
961   00B6  7D          	ld	a,l
962   00B7  32 00 00    	ld	(_dirs),a
963   00BA  CD 22 04    	call	_player_handle_lock
964   00BD  CD 1D 02    	call	_player_move
965   00C0  CD 02 06    	call	_player_collision
966   00C3  CD B7 01    	call	_player_check_exit
967   00C6  01 08 00    	ld	bc,_state+8
968   00C9  0A          	ld	a, (bc)
969   00CA  CB 6F       	bit	5, a
970   00CC  28 0F       	jr	Z,l_player_turn_00102
971   00CE  3A 00 00    	ld	a,(_game_inmune)
972   00D1  B7          	or	a, a
973   00D2  20 09       	jr	NZ,l_player_turn_00102
974   00D4  C5          	push	bc
975   00D5  CD 12 0B    	call	_player_lost_life
976   00D8  C1          	pop	bc
977   00D9  0A          	ld	a, (bc)
978   00DA  E6 DF       	and	a,0xdf
979   00DC  02          	ld	(bc), a
980   00DD              l_player_turn_00102:
981   00DD  CD E1 00    	call	_player_debug_keys
982   00E0              l_player_turn_00106:
983   00E0  C9          	ret
984   00E1              	SECTION code_compiler
985   00E1              ;	---------------------------------
986   00E1              ; Function player_debug_keys
987   00E1              ; ---------------------------------
988   00E1              _player_debug_keys:
989   00E1  CD 00 00    	call	_in_inkey
990   00E4  7D          	ld	a,l
991   00E5  D6 20       	sub	a,0x20
992   00E7  4D          	ld	c,l
993   00E8  44          	ld	b,h
994   00E9  20 16       	jr	NZ,l_player_debug_keys_00105
995   00EB  21 00 00    	ld	hl,_game_song_play_start
996   00EE  7E          	ld	a, (hl)
997   00EF  B7          	or	a, a
998   00F0  28 07       	jr	Z,l_player_debug_keys_00102
999   00F2  36 00       	ld	(hl),0x00
1000  00F4  CD 00 00    	call	_ay_song_stop
1001  00F7  18 05       	jr	l_player_debug_keys_00103
1002  00F9              l_player_debug_keys_00102:
1003  00F9  C5          	push	bc
1004  00FA  CD 00 00    	call	_audio_ingame
1005  00FD  C1          	pop	bc
1006  00FE              l_player_debug_keys_00103:
1007  00FE  CD 00 00    	call	_in_wait_nokey
1008  0101              l_player_debug_keys_00105:
1009  0101  79          	ld	a, c
1010  0102  D6 31       	sub	a,0x31
1011  0104  20 17       	jr	NZ,l_player_debug_keys_00109
1012  0106  21 00 00    	ld	hl,_scr_curr
1013  0109  35          	dec	(hl)
1014  010A  21 00 00    	ld	hl,_game_round_up
1015  010D  36 01       	ld	(hl),0x01
1016  010F  3A 00 00    	ld	a,(_scr_curr)
1017  0112  3C          	inc	a
1018  0113  20 05       	jr	NZ,l_player_debug_keys_00107
1019  0115  21 00 00    	ld	hl,_scr_curr
1020  0118  36 27       	ld	(hl),0x27
1021  011A              l_player_debug_keys_00107:
1022  011A  CD 00 00    	call	_in_wait_nokey
1023  011D              l_player_debug_keys_00109:
1024  011D  79          	ld	a, c
1025  011E  D6 32       	sub	a,0x32
1026  0120  20 18       	jr	NZ,l_player_debug_keys_00113
1027  0122  21 00 00    	ld	hl,_scr_curr
1028  0125  34          	inc	(hl)
1029  0126  21 00 00    	ld	hl,_game_round_up
1030  0129  36 01       	ld	(hl),0x01
1031  012B  3A 00 00    	ld	a,(_scr_curr)
1032  012E  D6 28       	sub	a,0x28
1033  0130  20 05       	jr	NZ,l_player_debug_keys_00111
1034  0132  21 00 00    	ld	hl,_scr_curr
1035  0135  36 00       	ld	(hl),0x00
1036  0137              l_player_debug_keys_00111:
1037  0137  CD 00 00    	call	_in_wait_nokey
1038  013A              l_player_debug_keys_00113:
1039  013A  79          	ld	a, c
1040  013B  D6 33       	sub	a,0x33
1041  013D  20 3E       	jr	NZ,l_player_debug_keys_00118
1042  013F  21 00 00    	ld	hl,_game_inmune
1043  0142  7E          	ld	a, (hl)
1044  0143  D6 01       	sub	a,0x01
1045  0145  3E 00       	ld	a,0x00
1046  0147  17          	rla
1047  0148  47          	ld	b,a
1048  0149  70          	ld	(hl),b
1049  014A  B7          	or	a, a
1050  014B  28 0F       	jr	Z,l_player_debug_keys_00115
1051  014D  C5          	push	bc
1052  014E  21 00 00    	ld	hl,___str_0
1053  0151  E5          	push	hl
1054  0152  21 15 00    	ld	hl,0x0015
1055  0155  E5          	push	hl
1056  0156  CD 00 00    	call	_zx_print_str
1057  0159  C1          	pop	bc
1058  015A  18 0D       	jr	l_player_debug_keys_00116
1059  015C              l_player_debug_keys_00115:
1060  015C  C5          	push	bc
1061  015D  21 0F 00    	ld	hl,___str_1
1062  0160  E5          	push	hl
1063  0161  21 15 00    	ld	hl,0x0015
1064  0164  E5          	push	hl
1065  0165  CD 00 00    	call	_zx_print_str
1066  0168  C1          	pop	bc
1067  0169              l_player_debug_keys_00116:
1068  0169  C5          	push	bc
1069  016A  21 19 00    	ld	hl,0x0019
1070  016D  CD 00 00    	call	_z80_delay_ms_fastcall
1071  0170  C1          	pop	bc
1072  0171  CD 00 00    	call	_in_wait_nokey
1073  0174  C5          	push	bc
1074  0175  21 15 20    	ld	hl,0x2015
1075  0178  E5          	push	hl
1076  0179  CD 00 00    	call	_game_fill_row
1077  017C  C1          	pop	bc
1078  017D              l_player_debug_keys_00118:
1079  017D  79          	ld	a, c
1080  017E  D6 34       	sub	a,0x34
1081  0180  20 10       	jr	NZ,l_player_debug_keys_00120
1082  0182  21 00 00    	ld	hl,_game_round_up
1083  0185  36 01       	ld	(hl),0x01
1084  0187  C5          	push	bc
1085  0188  21 FA 00    	ld	hl,0x00fa
1086  018B  CD 00 00    	call	_z80_delay_ms_fastcall
1087  018E  C1          	pop	bc
1088  018F  CD 00 00    	call	_in_wait_nokey
1089  0192              l_player_debug_keys_00120:
1090  0192  79          	ld	a, c
1091  0193  D6 35       	sub	a,0x35
1092  0195  20 1F       	jr	NZ,l_player_debug_keys_00126
1093  0197  21 00 00    	ld	hl,_scr_curr
1094  019A  7E          	ld	a, (hl)
1095  019B  D6 14       	sub	a,0x14
1096  019D  38 04       	jr	C,l_player_debug_keys_00122
1097  019F  36 00       	ld	(hl),0x00
1098  01A1  18 05       	jr	l_player_debug_keys_00123
1099  01A3              l_player_debug_keys_00122:
1100  01A3  21 00 00    	ld	hl,_scr_curr
1101  01A6  36 14       	ld	(hl),0x14
1102  01A8              l_player_debug_keys_00123:
1103  01A8  21 00 00    	ld	hl,_game_round_up
1104  01AB  36 01       	ld	(hl),0x01
1105  01AD  21 FA 00    	ld	hl,0x00fa
1106  01B0  CD 00 00    	call	_z80_delay_ms_fastcall
1107  01B3  CD 00 00    	call	_in_wait_nokey
1108  01B6              l_player_debug_keys_00126:
1109  01B6  C9          	ret
1110  01B7              	SECTION rodata_compiler
1111  0000              ___str_0:
1112  0000  4D 49 4C 4C 45 4E 49 41 4C 20 4D 4F 44 45 
                        	DEFM "MILLENIAL MODE"
1113  000E  00          	DEFB 0x00
1114  000F              	SECTION rodata_compiler
1115  000F              ___str_1:
1116  000F  47 45 4E 58 20 4D 4F 44 45 
                        	DEFM "GENX MODE"
1117  0018  00          	DEFB 0x00
1118  0019              	SECTION code_compiler
1119  01B7              ;	---------------------------------
1120  01B7              ; Function player_check_exit
1121  01B7              ; ---------------------------------
1122  01B7              _player_check_exit:
1123  01B7  3A 00 00    	ld	a,(_obj_count)
1124  01BA  3C          	inc	a
1125  01BB  20 5F       	jr	NZ,l_player_check_exit_00109
1126  01BD  21 08 00    	ld	hl,+(_col + 0x0008)
1127  01C0  4E          	ld	c, (hl)
1128  01C1  3A 00 00    	ld	a,(_game_exit_col)
1129  01C4  91          	sub	a, c
1130  01C5  20 55       	jr	NZ,l_player_check_exit_00109
1131  01C7  2A 08 00    	ld	hl,(_lin + 0x0008)
1132  01CA  26 00       	ld	h,0x00
1133  01CC  01 10 00    	ld	bc,0x0010
1134  01CF  09          	add	hl,bc
1135  01D0  3A 00 00    	ld	a,(_game_exit_lin)
1136  01D3  5F          	ld	e,a
1137  01D4  16 00       	ld	d,0x00
1138  01D6  7D          	ld	a,l
1139  01D7  93          	sub	a,e
1140  01D8  44          	ld	b,h
1141  01D9  6F          	ld	l, a
1142  01DA  78          	ld	a, b
1143  01DB  9A          	sbc	a, d
1144  01DC  67          	ld	h, a
1145  01DD  CD 00 00    	call	_abs_fastcall
1146  01E0  7D          	ld	a,l
1147  01E1  32 00 00    	ld	(_v0),a
1148  01E4  D6 08       	sub	a,0x08
1149  01E6  30 34       	jr	NC,l_player_check_exit_00109
1150  01E8  21 00 00    	ld	hl,_scr_curr
1151  01EB  34          	inc	(hl)
1152  01EC  21 00 00    	ld	hl,_game_round_up
1153  01EF  36 01       	ld	(hl),0x01
1154  01F1  01 08 00    	ld	bc,_state+8
1155  01F4  0A          	ld	a, (bc)
1156  01F5  E6 DF       	and	a,0xdf
1157  01F7  02          	ld	(bc), a
1158  01F8  CD 00 00    	call	_ay_song_stop
1159  01FB              l_player_check_exit_00101:
1160  01FB  ED 4B 00 00 	ld	bc,(_air_curr_byte)
1161  01FF  ED 5B 00 00 	ld	de,(_air_end_byte)
1162  0203  7B          	ld	a,e
1163  0204  91          	sub	a,c
1164  0205  7A          	ld	a,d
1165  0206  98          	sbc	a,b
1166  0207  D0          	ret	NC
1167  0208  CD 00 00    	call	_audio_tick
1168  020B  CD 00 00    	call	_game_anim_air
1169  020E  21 19 00    	ld	hl,0x0019
1170  0211  CD 8B 07    	call	_player_score_add
1171  0214  21 05 00    	ld	hl,0x0005
1172  0217  CD 00 00    	call	_z80_delay_ms_fastcall
1173  021A  18 DF       	jr	l_player_check_exit_00101
1174  021C              l_player_check_exit_00109:
1175  021C  C9          	ret
1176  021D              	SECTION code_compiler
1177  021D              ;	---------------------------------
1178  021D              ; Function player_move
1179  021D              ; ---------------------------------
1180  021D              _player_move:
1181  021D  3A 08 00    	ld	a,(_state + 0x0008)
1182  0220  CB 47       	bit	0, a
1183  0222  20 04       	jr	NZ,l_player_move_00101
1184  0224  CB 4F       	bit	1, a
1185  0226  28 05       	jr	Z,l_player_move_00102
1186  0228              l_player_move_00101:
1187  0228  CD 36 02    	call	_player_move_jump
1188  022B  18 03       	jr	l_player_move_00103
1189  022D              l_player_move_00102:
1190  022D  CD C2 03    	call	_player_move_walk
1191  0230              l_player_move_00103:
1192  0230  CD 00 00    	call	_spr_paint_player
1193  0233  2E 00       	ld	l,0x00
1194  0235  C9          	ret
1195  0236              	SECTION code_compiler
1196  0236              ;	---------------------------------
1197  0236              ; Function player_move_jump
1198  0236              ; ---------------------------------
1199  0236              _player_move_jump:
1200  0236  CD 00 00    	call	___sdcc_enter_ix
1201  0239  F5          	push	af
1202  023A  3B          	dec	sp
1203  023B  21 00 00    	ld	hl,_player_jump_count
1204  023E  34          	inc	(hl)
1205  023F  3E 11       	ld	a,0x11
1206  0241  96          	sub	a, (hl)
1207  0242  30 07       	jr	NC,l_player_move_jump_00102
1208  0244  01 08 00    	ld	bc,_state+8
1209  0247  0A          	ld	a, (bc)
1210  0248  E6 F3       	and	a,+(0xfb&0xf7)
1211  024A  02          	ld	(bc),a
1212  024B              l_player_move_jump_00102:
1213  024B  3A 08 00    	ld	a,(_state_a + 0x0008)
1214  024E  CB 57       	bit	2, a
1215  0250  28 19       	jr	Z,l_player_move_jump_00108
1216  0252  3E 02       	ld	a,0x02
1217  0254  21 00 00    	ld	hl,_player_jump_count
1218  0257  96          	sub	a, (hl)
1219  0258  30 0C       	jr	NC,l_player_move_jump_00104
1220  025A  7E          	ld	a, (hl)
1221  025B  D6 09       	sub	a,0x09
1222  025D  30 07       	jr	NC,l_player_move_jump_00104
1223  025F  21 08 00    	ld	hl, +(_spr_speed + 0x0008)
1224  0262  36 07       	ld	(hl),0x07
1225  0264  18 05       	jr	l_player_move_jump_00108
1226  0266              l_player_move_jump_00104:
1227  0266  21 08 00    	ld	hl, +(_spr_speed + 0x0008)
1228  0269  36 04       	ld	(hl),0x04
1229  026B              l_player_move_jump_00108:
1230  026B  2A 00 00    	ld	hl,(_player_vel_y)
1231  026E  ED 5B 00 00 	ld	de,(_game_gravity)
1232  0272  19          	add	hl,de
1233  0273  22 00 00    	ld	(_player_vel_y),hl
1234  0276  3A 08 00    	ld	a,(_state + 0x0008)
1235  0279  CB 67       	bit	4, a
1236  027B  28 05       	jr	Z,l_player_move_jump_00110
1237  027D  E6 E3       	and	a,+(0xfb&(0xf7&0xef))
1238  027F  32 08 00    	ld	((_state + 0x0008)),a
1239  0282              l_player_move_jump_00110:
1240  0282  21 64 00    	ld	hl,0x0064
1241  0285  E5          	push	hl
1242  0286  2A 00 00    	ld	hl,(_player_vel_y)
1243  0289  E5          	push	hl
1244  028A  CD 00 00    	call	__divsint_callee
1245  028D  4D          	ld	c, l
1246  028E  44          	ld	b, h
1247  028F  CB 41       	bit	0,c
1248  0291  21 00 00    	ld	hl,_s_lin1
1249  0294  71          	ld	(hl),c
1250  0295  28 04       	jr	Z,l_player_move_jump_00112
1251  0297  21 00 00    	ld	hl,_s_lin1
1252  029A  35          	dec	(hl)
1253  029B              l_player_move_jump_00112:
1254  029B  11 08 00    	ld	de,_lin+8
1255  029E  1A          	ld	a, (de)
1256  029F  DD 77 FF    	ld	(ix-1),a
1257  02A2  21 00 00    	ld	hl,_s_lin1
1258  02A5  86          	add	a, (hl)
1259  02A6  77          	ld	(hl), a
1260  02A7  AF          	xor	a, a
1261  02A8  B9          	cp	a, c
1262  02A9  98          	sbc	a, b
1263  02AA  E2 AF 02    	jp	PO, l_player_move_jump_00199
1264  02AD  EE 80       	xor	a,0x80
1265  02AF              l_player_move_jump_00199:
1266  02AF  FA F1 02    	jp	M, l_player_move_jump_00127
1267  02B2  D5          	push	de
1268  02B3  CD 00 00    	call	_spr_set_up
1269  02B6  D1          	pop	de
1270  02B7  3E 80       	ld	a,0x80
1271  02B9  21 00 00    	ld	hl,_s_lin1
1272  02BC  96          	sub	a, (hl)
1273  02BD  30 02       	jr	NC,l_player_move_jump_00114
1274  02BF  36 00       	ld	(hl),0x00
1275  02C1              l_player_move_jump_00114:
1276  02C1  21 08 00    	ld	hl,+(_col + 0x0008)
1277  02C4  46          	ld	b, (hl)
1278  02C5  3A 00 00    	ld	a,(_s_lin1)
1279  02C8  D5          	push	de
1280  02C9  4F          	ld	c,a
1281  02CA  C5          	push	bc
1282  02CB  CD C2 08    	call	_player_check_ceil
1283  02CE  F1          	pop	af
1284  02CF  D1          	pop	de
1285  02D0  7D          	ld	a,l
1286  02D1  B7          	or	a, a
1287  02D2  20 10       	jr	NZ,l_player_move_jump_00116
1288  02D4  21 00 00    	ld	hl,0x0000
1289  02D7  22 00 00    	ld	(_player_vel_y),hl
1290  02DA  3A 08 00    	ld	a,(_state + 0x0008)
1291  02DD  E6 F3       	and	a,+(0xfb&0xf7)
1292  02DF  32 08 00    	ld	((_state + 0x0008)),a
1293  02E2  18 04       	jr	l_player_move_jump_00117
1294  02E4              l_player_move_jump_00116:
1295  02E4  3A 00 00    	ld	a,(_s_lin1)
1296  02E7  12          	ld	(de), a
1297  02E8              l_player_move_jump_00117:
1298  02E8  3A 00 00    	ld	a,(_s_lin1)
1299  02EB  32 00 00    	ld	(_player_jump_top),a
1300  02EE  C3 85 03    	jp	l_player_move_jump_00128
1301  02F1              l_player_move_jump_00127:
1302  02F1  D5          	push	de
1303  02F2  CD 5F 0A    	call	_player_get_floor
1304  02F5  D1          	pop	de
1305  02F6  7D          	ld	a,l
1306  02F7  32 00 00    	ld	(_v0),a
1307  02FA  21 00 00    	ld	hl,_s_lin1
1308  02FD  7E          	ld	a, (hl)
1309  02FE  D6 78       	sub	a,0x78
1310  0300  30 0E       	jr	NC,l_player_move_jump_00122
1311  0302  7E          	ld	a, (hl)
1312  0303  21 00 00    	ld	hl,_v0
1313  0306  96          	sub	a, (hl)
1314  0307  38 73       	jr	C,l_player_move_jump_00123
1315  0309  7E          	ld	a, (hl)
1316  030A  21 00 00    	ld	hl,_s_lin0
1317  030D  96          	sub	a, (hl)
1318  030E  38 6C       	jr	C,l_player_move_jump_00123
1319  0310              l_player_move_jump_00122:
1320  0310  3A 00 00    	ld	a,(_s_lin1)
1321  0313  4F          	ld	c,a
1322  0314  06 00       	ld	b,0x00
1323  0316  3A 00 00    	ld	a,(_player_jump_top)
1324  0319  DD 77 FD    	ld	(ix-3),a
1325  031C  DD 36 FE 00 	ld	(ix-2),0x00
1326  0320  79          	ld	a, c
1327  0321  DD 96 FD    	sub	a,(ix-3)
1328  0324  4F          	ld	c, a
1329  0325  78          	ld	a, b
1330  0326  DD 9E FE    	sbc	a,(ix-2)
1331  0329  47          	ld	b, a
1332  032A  79          	ld	a, c
1333  032B  D6 28       	sub	a,0x28
1334  032D  78          	ld	a, b
1335  032E  17          	rla
1336  032F  3F          	ccf
1337  0330  1F          	rra
1338  0331  DE 80       	sbc	a,0x80
1339  0333  38 08       	jr	C,l_player_move_jump_00119
1340  0335  3A 08 00    	ld	a,(_state + 0x0008)
1341  0338  F6 20       	or	a,0x20
1342  033A  32 08 00    	ld	((_state + 0x0008)),a
1343  033D              l_player_move_jump_00119:
1344  033D  3A 00 00    	ld	a,(_v0)
1345  0340  12          	ld	(de), a
1346  0341  21 00 00    	ld	hl,0x0000
1347  0344  22 00 00    	ld	(_player_vel_y),hl
1348  0347  3A 08 00    	ld	a,(_state + 0x0008)
1349  034A  E6 FC       	and	a,+(0xfd&0xfe)
1350  034C  32 08 00    	ld	((_state + 0x0008)),a
1351  034F  CD 38 09    	call	_player_check_conveyor
1352  0352  CD 00 00    	call	_ay_fx_stop
1353  0355  21 00 00    	ld	hl,_dirs
1354  0358  CB 7E       	bit	7, (hl)
1355  035A  28 0F       	jr	Z,l_player_move_jump_00121
1356  035C  AF          	xor	a, a
1357  035D  F5          	push	af
1358  035E  33          	inc	sp
1359  035F  CD 8C 09    	call	_player_check_floor
1360  0362  33          	inc	sp
1361  0363  3E 01       	ld	a,0x01
1362  0365  F5          	push	af
1363  0366  33          	inc	sp
1364  0367  CD 8C 09    	call	_player_check_floor
1365  036A  33          	inc	sp
1366  036B              l_player_move_jump_00121:
1367  036B  21 08 00    	ld	hl, +(_spr_speed + 0x0008)
1368  036E  36 04       	ld	(hl),0x04
1369  0370  3A 08 00    	ld	a,(_state_a + 0x0008)
1370  0373  E6 FB       	and	a,0xfb
1371  0375  32 08 00    	ld	((_state_a + 0x0008)),a
1372  0378  2E 00       	ld	l,0x00
1373  037A  18 41       	jr	l_player_move_jump_00134
1374  037C              l_player_move_jump_00123:
1375  037C  D5          	push	de
1376  037D  CD 00 00    	call	_spr_set_down
1377  0380  D1          	pop	de
1378  0381  3A 00 00    	ld	a,(_s_lin1)
1379  0384  12          	ld	(de), a
1380  0385              l_player_move_jump_00128:
1381  0385  3A 08 00    	ld	a,(_state + 0x0008)
1382  0388  CB 5F       	bit	3, a
1383  038A  20 04       	jr	NZ,l_player_move_jump_00131
1384  038C  CB 57       	bit	2, a
1385  038E  28 2B       	jr	Z,l_player_move_jump_00132
1386  0390              l_player_move_jump_00131:
1387  0390  2A 00 00    	ld	hl,(_player_jump_count)
1388  0393  26 00       	ld	h,0x00
1389  0395  01 00 00    	ld	bc,_player_jump_hor
1390  0398  09          	add	hl,bc
1391  0399  7E          	ld	a,(hl)
1392  039A  B7          	or	a, a
1393  039B  28 1B       	jr	Z,l_player_move_jump_00130
1394  039D  3A 00 00    	ld	a,(_player_vel_y)
1395  03A0  21 00 00    	ld	hl,_game_gravity
1396  03A3  96          	sub	a, (hl)
1397  03A4  21 00 00    	ld	hl,_player_vel_y
1398  03A7  77          	ld	(hl), a
1399  03A8  23          	inc	hl
1400  03A9  7E          	ld	a, (hl)
1401  03AA  21 01 00    	ld	hl,_game_gravity + 1
1402  03AD  9E          	sbc	a, (hl)
1403  03AE  32 01 00    	ld	(_player_vel_y + 1),a
1404  03B1  CD 00 00    	call	_spr_move_horizontal
1405  03B4  2E 00       	ld	l,0x00
1406  03B6  18 05       	jr	l_player_move_jump_00134
1407  03B8              l_player_move_jump_00130:
1408  03B8  CD 00 00    	call	_spr_move_horizontal
1409  03BB              l_player_move_jump_00132:
1410  03BB  2E 01       	ld	l,0x01
1411  03BD              l_player_move_jump_00134:
1412  03BD  DD F9       	ld	sp, ix
1413  03BF  DD E1       	pop	ix
1414  03C1  C9          	ret
1415  03C2              	SECTION code_compiler
1416  03C2              ;	---------------------------------
1417  03C2              ; Function player_move_walk
1418  03C2              ; ---------------------------------
1419  03C2              _player_move_walk:
1420  03C2  CD 4E 07    	call	_player_check_input
1421  03C5  7D          	ld	a, l
1422  03C6  B7          	or	a, a
1423  03C7  28 49       	jr	Z,l_player_move_walk_00115
1424  03C9  21 00 00    	ld	hl,_dirs
1425  03CC  CB 7E       	bit	7, (hl)
1426  03CE  28 0A       	jr	Z,l_player_move_walk_00102
1427  03D0  CD 2F 05    	call	_player_new_jump
1428  03D3  CD 00 00    	call	_spr_move_horizontal
1429  03D6  2E 01       	ld	l,0x01
1430  03D8  18 47       	jr	l_player_move_walk_00117
1431  03DA              l_player_move_walk_00102:
1432  03DA  01 08 00    	ld	bc,_state+8
1433  03DD  0A          	ld	a, (bc)
1434  03DE  CB 67       	bit	4, a
1435  03E0  20 05       	jr	NZ,l_player_move_walk_00104
1436  03E2  C5          	push	bc
1437  03E3  CD 87 04    	call	_player_handle_walk
1438  03E6  C1          	pop	bc
1439  03E7              l_player_move_walk_00104:
1440  03E7  3A 08 00    	ld	a,(_state_a + 0x0008)
1441  03EA  0F          	rrca
1442  03EB  38 05       	jr	C,l_player_move_walk_00110
1443  03ED  CD F7 04    	call	_player_handle_conveyor
1444  03F0  18 16       	jr	l_player_move_walk_00111
1445  03F2              l_player_move_walk_00110:
1446  03F2  21 00 00    	ld	hl,_dirs
1447  03F5  CB 5E       	bit	3, (hl)
1448  03F7  28 04       	jr	Z,l_player_move_walk_00106
1449  03F9  0A          	ld	a, (bc)
1450  03FA  F6 04       	or	a,0x04
1451  03FC  02          	ld	(bc), a
1452  03FD              l_player_move_walk_00106:
1453  03FD  21 00 00    	ld	hl,_dirs
1454  0400  CB 56       	bit	2, (hl)
1455  0402  28 04       	jr	Z,l_player_move_walk_00111
1456  0404  0A          	ld	a, (bc)
1457  0405  F6 08       	or	a,0x08
1458  0407  02          	ld	(bc), a
1459  0408              l_player_move_walk_00111:
1460  0408  CD BF 04    	call	_player_handle_fall
1461  040B  CD 00 00    	call	_spr_move_horizontal
1462  040E  2E 01       	ld	l,0x01
1463  0410  18 0F       	jr	l_player_move_walk_00117
1464  0412              l_player_move_walk_00115:
1465  0412  CD F7 04    	call	_player_handle_conveyor
1466  0415  7D          	ld	a, l
1467  0416  B7          	or	a, a
1468  0417  28 03       	jr	Z,l_player_move_walk_00113
1469  0419  CD 00 00    	call	_spr_move_horizontal
1470  041C              l_player_move_walk_00113:
1471  041C  CD BF 04    	call	_player_handle_fall
1472  041F  2E 00       	ld	l,0x00
1473  0421              l_player_move_walk_00117:
1474  0421  C9          	ret
1475  0422              	SECTION code_compiler
1476  0422              ;	---------------------------------
1477  0422              ; Function player_handle_lock
1478  0422              ; ---------------------------------
1479  0422              _player_handle_lock:
1480  0422  3A 08 00    	ld	a,(_state + 0x0008)
1481  0425  CB 67       	bit	4, a
1482  0427  20 4D       	jr	NZ,l_player_handle_lock_00112
1483  0429  CB 47       	bit	0, a
1484  042B  20 49       	jr	NZ,l_player_handle_lock_00112
1485  042D  CB 4F       	bit	1, a
1486  042F  20 45       	jr	NZ,l_player_handle_lock_00112
1487  0431  21 00 00    	ld	hl,_dirs
1488  0434  CB 5E       	bit	3, (hl)
1489  0436  28 1C       	jr	Z,l_player_handle_lock_00105
1490  0438  3A 00 00    	ld	a,(_dirs_last)
1491  043B  D6 02       	sub	a,0x02
1492  043D  28 0E       	jr	Z,l_player_handle_lock_00102
1493  043F  21 00 00    	ld	hl,_dirs_last
1494  0442  36 02       	ld	(hl),0x02
1495  0444  01 08 00    	ld	bc,_state_a+8
1496  0447  0A          	ld	a, (bc)
1497  0448  E6 FE       	and	a,0xfe
1498  044A  02          	ld	(bc), a
1499  044B  18 07       	jr	l_player_handle_lock_00105
1500  044D              l_player_handle_lock_00102:
1501  044D  01 08 00    	ld	bc,_state_a+8
1502  0450  0A          	ld	a, (bc)
1503  0451  F6 01       	or	a,0x01
1504  0453  02          	ld	(bc), a
1505  0454              l_player_handle_lock_00105:
1506  0454  21 00 00    	ld	hl,_dirs
1507  0457  CB 56       	bit	2, (hl)
1508  0459  28 1B       	jr	Z,l_player_handle_lock_00112
1509  045B  3A 00 00    	ld	a,(_dirs_last)
1510  045E  3D          	dec	a
1511  045F  28 0E       	jr	Z,l_player_handle_lock_00107
1512  0461  21 00 00    	ld	hl,_dirs_last
1513  0464  36 01       	ld	(hl),0x01
1514  0466  01 08 00    	ld	bc,_state_a+8
1515  0469  0A          	ld	a, (bc)
1516  046A  E6 FE       	and	a,0xfe
1517  046C  02          	ld	(bc), a
1518  046D  18 07       	jr	l_player_handle_lock_00112
1519  046F              l_player_handle_lock_00107:
1520  046F  01 08 00    	ld	bc,_state_a+8
1521  0472  0A          	ld	a, (bc)
1522  0473  F6 01       	or	a,0x01
1523  0475  02          	ld	(bc), a
1524  0476              l_player_handle_lock_00112:
1525  0476  21 00 00    	ld	hl,_dirs
1526  0479  CB 5E       	bit	3,(hl)
1527  047B  C0          	ret	NZ
1528  047C  CB 56       	bit	2, (hl)
1529  047E  C0          	ret	NZ
1530  047F  01 08 00    	ld	bc,_state_a+8
1531  0482  0A          	ld	a, (bc)
1532  0483  E6 FE       	and	a,0xfe
1533  0485  02          	ld	(bc), a
1534  0486  C9          	ret
1535  0487              	SECTION code_compiler
1536  0487              ;	---------------------------------
1537  0487              ; Function player_handle_walk
1538  0487              ; ---------------------------------
1539  0487              _player_handle_walk:
1540  0487  21 00 00    	ld	hl,_dirs
1541  048A  CB 5E       	bit	3, (hl)
1542  048C  28 11       	jr	Z,l_player_handle_walk_00104
1543  048E  3A 08 00    	ld	a,(_state_a + 0x0008)
1544  0491  CB 5F       	bit	3, a
1545  0493  28 07       	jr	Z,l_player_handle_walk_00102
1546  0495  01 08 00    	ld	bc,_colint+8
1547  0498  0A          	ld	a, (bc)
1548  0499  C6 FF       	add	a,0xff
1549  049B  02          	ld	(bc), a
1550  049C              l_player_handle_walk_00102:
1551  049C  CD 00 00    	call	_spr_set_right
1552  049F              l_player_handle_walk_00104:
1553  049F  21 00 00    	ld	hl,_dirs
1554  04A2  CB 56       	bit	2, (hl)
1555  04A4  28 10       	jr	Z,l_player_handle_walk_00108
1556  04A6  3A 08 00    	ld	a,(_state_a + 0x0008)
1557  04A9  CB 67       	bit	4, a
1558  04AB  28 06       	jr	Z,l_player_handle_walk_00106
1559  04AD  01 08 00    	ld	bc,_colint+8
1560  04B0  0A          	ld	a, (bc)
1561  04B1  3C          	inc	a
1562  04B2  02          	ld	(bc), a
1563  04B3              l_player_handle_walk_00106:
1564  04B3  CD 00 00    	call	_spr_set_left
1565  04B6              l_player_handle_walk_00108:
1566  04B6  21 08 04    	ld	hl,0x0408
1567  04B9  E5          	push	hl
1568  04BA  CD 71 07    	call	_player_tile
1569  04BD  F1          	pop	af
1570  04BE  C9          	ret
1571  04BF              	SECTION code_compiler
1572  04BF              ;	---------------------------------
1573  04BF              ; Function player_handle_fall
1574  04BF              ; ---------------------------------
1575  04BF              _player_handle_fall:
1576  04BF  AF          	xor	a, a
1577  04C0  F5          	push	af
1578  04C1  33          	inc	sp
1579  04C2  CD 8C 09    	call	_player_check_floor
1580  04C5  33          	inc	sp
1581  04C6  7D          	ld	a, l
1582  04C7  B7          	or	a, a
1583  04C8  C8          	ret	Z
1584  04C9  3E 01       	ld	a,0x01
1585  04CB  F5          	push	af
1586  04CC  33          	inc	sp
1587  04CD  CD 8C 09    	call	_player_check_floor
1588  04D0  33          	inc	sp
1589  04D1  7D          	ld	a, l
1590  04D2  B7          	or	a, a
1591  04D3  C8          	ret	Z
1592  04D4  3A 08 00    	ld	a,(_lin + 0x0008)
1593  04D7  32 00 00    	ld	(_player_jump_top),a
1594  04DA  01 08 00    	ld	bc,_state+8
1595  04DD  0A          	ld	a, (bc)
1596  04DE  F6 02       	or	a,0x02
1597  04E0  E6 F3       	and	a,+(0xf7&0xfb)
1598  04E2  02          	ld	(bc),a
1599  04E3  01 08 00    	ld	bc,_state_a+8
1600  04E6  0A          	ld	a, (bc)
1601  04E7  E6 FE       	and	a,0xfe
1602  04E9  02          	ld	(bc), a
1603  04EA  21 00 00    	ld	hl,_player_jump_count
1604  04ED  36 FF       	ld	(hl),0xff
1605  04EF  21 00 00    	ld	hl,_player_fall_start
1606  04F2  36 01       	ld	(hl),0x01
1607  04F4  C3 00 00    	jp  _audio_fall
1608  04F7              	SECTION code_compiler
1609  04F7              ;	---------------------------------
1610  04F7              ; Function player_handle_conveyor
1611  04F7              ; ---------------------------------
1612  04F7              _player_handle_conveyor:
1613  04F7  CD 38 09    	call	_player_check_conveyor
1614  04FA  3A 08 00    	ld	a,(_state + 0x0008)
1615  04FD  CB 67       	bit	4, a
1616  04FF  28 2B       	jr	Z,l_player_handle_conveyor_00106
1617  0501  3A 00 00    	ld	a,(_game_conveyor_dir)
1618  0504  D6 02       	sub	a,0x02
1619  0506  20 0F       	jr	NZ,l_player_handle_conveyor_00102
1620  0508  CD 00 00    	call	_spr_set_right
1621  050B  21 08 04    	ld	hl,0x0408
1622  050E  E5          	push	hl
1623  050F  CD 71 07    	call	_player_tile
1624  0512  F1          	pop	af
1625  0513  2E 01       	ld	l,0x01
1626  0515  18 17       	jr	l_player_handle_conveyor_00107
1627  0517              l_player_handle_conveyor_00102:
1628  0517  3A 00 00    	ld	a,(_game_conveyor_dir)
1629  051A  3D          	dec	a
1630  051B  20 0F       	jr	NZ,l_player_handle_conveyor_00106
1631  051D  CD 00 00    	call	_spr_set_left
1632  0520  21 08 04    	ld	hl,0x0408
1633  0523  E5          	push	hl
1634  0524  CD 71 07    	call	_player_tile
1635  0527  F1          	pop	af
1636  0528  2E 01       	ld	l,0x01
1637  052A  18 02       	jr	l_player_handle_conveyor_00107
1638  052C              l_player_handle_conveyor_00106:
1639  052C  2E 00       	ld	l,0x00
1640  052E              l_player_handle_conveyor_00107:
1641  052E  C9          	ret
1642  052F              	SECTION code_compiler
1643  052F              ;	---------------------------------
1644  052F              ; Function player_new_jump
1645  052F              ; ---------------------------------
1646  052F              _player_new_jump:
1647  052F  21 08 00    	ld	hl,+(_col + 0x0008)
1648  0532  56          	ld	d, (hl)
1649  0533  21 08 00    	ld	hl,+(_lin + 0x0008)
1650  0536  46          	ld	b, (hl)
1651  0537  05          	dec	b
1652  0538  05          	dec	b
1653  0539  58          	ld	e,b
1654  053A  D5          	push	de
1655  053B  CD C2 08    	call	_player_check_ceil
1656  053E  F1          	pop	af
1657  053F  7D          	ld	a, l
1658  0540  B7          	or	a, a
1659  0541  CA 01 06    	jp	Z, l_player_new_jump_00123
1660  0544  3A 08 00    	ld	a,(_state_a + 0x0008)
1661  0547  E6 FB       	and	a,0xfb
1662  0549  32 08 00    	ld	((_state_a + 0x0008)),a
1663  054C  3A 00 00    	ld	a,(_game_mode)
1664  054F  B7          	or	a, a
1665  0550  20 0E       	jr	NZ,l_player_new_jump_00102
1666  0552  21 64 00    	ld	hl,0x0064
1667  0555  22 00 00    	ld	(_game_gravity),hl
1668  0558  21 A8 FD    	ld	hl,0xfda8
1669  055B  22 00 00    	ld	(_player_vel_y0),hl
1670  055E  18 0C       	jr	l_player_new_jump_00103
1671  0560              l_player_new_jump_00102:
1672  0560  21 64 00    	ld	hl,0x0064
1673  0563  22 00 00    	ld	(_game_gravity),hl
1674  0566  21 A8 FD    	ld	hl,0xfda8
1675  0569  22 00 00    	ld	(_player_vel_y0),hl
1676  056C              l_player_new_jump_00103:
1677  056C  21 00 00    	ld	hl,_player_vel_inc
1678  056F  36 01       	ld	(hl),0x01
1679  0571  21 00 00    	ld	hl,_player_jump_count
1680  0574  36 FF       	ld	(hl),0xff
1681  0576  CD 00 00    	call	_audio_jump
1682  0579  CD 00 00    	call	_spr_set_up
1683  057C  2A 00 00    	ld	hl,(_player_vel_y0)
1684  057F  22 00 00    	ld	(_player_vel_y),hl
1685  0582  CD F7 04    	call	_player_handle_conveyor
1686  0585  7D          	ld	a, l
1687  0586  B7          	or	a, a
1688  0587  28 31       	jr	Z,l_player_new_jump_00119
1689  0589  3A 08 00    	ld	a,(_state_a + 0x0008)
1690  058C  CB 47       	bit	0, a
1691  058E  28 20       	jr	Z,l_player_new_jump_00109
1692  0590  CB 4F       	bit	1, a
1693  0592  20 1C       	jr	NZ,l_player_new_jump_00109
1694  0594  21 00 00    	ld	hl,_dirs
1695  0597  CB 56       	bit	2, (hl)
1696  0599  28 03       	jr	Z,l_player_new_jump_00105
1697  059B  CD 00 00    	call	_spr_set_left
1698  059E              l_player_new_jump_00105:
1699  059E  21 00 00    	ld	hl,_dirs
1700  05A1  CB 5E       	bit	3, (hl)
1701  05A3  28 03       	jr	Z,l_player_new_jump_00107
1702  05A5  CD 00 00    	call	_spr_set_right
1703  05A8              l_player_new_jump_00107:
1704  05A8  21 08 04    	ld	hl,0x0408
1705  05AB  E5          	push	hl
1706  05AC  CD 71 07    	call	_player_tile
1707  05AF  F1          	pop	af
1708  05B0              l_player_new_jump_00109:
1709  05B0  3A 08 00    	ld	a,(_state_a + 0x0008)
1710  05B3  F6 02       	or	a,0x02
1711  05B5  32 08 00    	ld	((_state_a + 0x0008)),a
1712  05B8  18 38       	jr	l_player_new_jump_00120
1713  05BA              l_player_new_jump_00119:
1714  05BA  01 08 00    	ld	bc,_state+8
1715  05BD  0A          	ld	a, (bc)
1716  05BE  E6 F3       	and	a,+(0xf7&0xfb)
1717  05C0  02          	ld	(bc),a
1718  05C1  21 00 00    	ld	hl,_dirs
1719  05C4  CB 56       	bit	2, (hl)
1720  05C6  28 05       	jr	Z,l_player_new_jump_00112
1721  05C8  C5          	push	bc
1722  05C9  CD 00 00    	call	_spr_set_left
1723  05CC  C1          	pop	bc
1724  05CD              l_player_new_jump_00112:
1725  05CD  21 00 00    	ld	hl,_dirs
1726  05D0  CB 5E       	bit	3, (hl)
1727  05D2  28 05       	jr	Z,l_player_new_jump_00114
1728  05D4  C5          	push	bc
1729  05D5  CD 00 00    	call	_spr_set_right
1730  05D8  C1          	pop	bc
1731  05D9              l_player_new_jump_00114:
1732  05D9  0A          	ld	a, (bc)
1733  05DA  CB 5F       	bit	3, a
1734  05DC  20 0C       	jr	NZ,l_player_new_jump_00116
1735  05DE  CB 57       	bit	2, a
1736  05E0  20 08       	jr	NZ,l_player_new_jump_00116
1737  05E2  3A 08 00    	ld	a,(_state_a + 0x0008)
1738  05E5  F6 04       	or	a,0x04
1739  05E7  32 08 00    	ld	((_state_a + 0x0008)),a
1740  05EA              l_player_new_jump_00116:
1741  05EA  21 08 04    	ld	hl,0x0408
1742  05ED  E5          	push	hl
1743  05EE  CD 71 07    	call	_player_tile
1744  05F1  F1          	pop	af
1745  05F2              l_player_new_jump_00120:
1746  05F2  01 08 00    	ld	bc,_state+8
1747  05F5  0A          	ld	a, (bc)
1748  05F6  E6 EF       	and	a,0xef
1749  05F8  02          	ld	(bc), a
1750  05F9  3A 08 00    	ld	a,(_state_a + 0x0008)
1751  05FC  E6 FD       	and	a,0xfd
1752  05FE  32 08 00    	ld	((_state_a + 0x0008)),a
1753  0601              l_player_new_jump_00123:
1754  0601  C9          	ret
1755  0602              	SECTION code_compiler
1756  0602              ;	---------------------------------
1757  0602              ; Function player_collision
1758  0602              ; ---------------------------------
1759  0602              _player_collision:
1760  0602  21 08 00    	ld	hl,+(_col + 0x0008)
1761  0605  56          	ld	d, (hl)
1762  0606  21 08 00    	ld	hl,+(_lin + 0x0008)
1763  0609  5E          	ld	e, (hl)
1764  060A  D5          	push	de
1765  060B  CD 00 00    	call	_spr_calc_index
1766  060E  F1          	pop	af
1767  060F  22 00 00    	ld	(_index1),hl
1768  0612  CD 1F 07    	call	_player_pick
1769  0615  21 08 00    	ld	hl,+(_col + 0x0008)
1770  0618  56          	ld	d, (hl)
1771  0619  3A 08 00    	ld	a,(_lin + 0x0008)
1772  061C  C6 0E       	add	a,0x0e
1773  061E  5F          	ld	e, a
1774  061F  D5          	push	de
1775  0620  CD 00 00    	call	_spr_calc_index
1776  0623  F1          	pop	af
1777  0624  22 00 00    	ld	(_index1),hl
1778  0627  CD 1F 07    	call	_player_pick
1779  062A  21 08 00    	ld	hl,+(_col + 0x0008)
1780  062D  56          	ld	d, (hl)
1781  062E  14          	inc	d
1782  062F  21 08 00    	ld	hl,+(_lin + 0x0008)
1783  0632  5E          	ld	e, (hl)
1784  0633  D5          	push	de
1785  0634  CD 00 00    	call	_spr_calc_index
1786  0637  F1          	pop	af
1787  0638  22 00 00    	ld	(_index1),hl
1788  063B  CD 1F 07    	call	_player_pick
1789  063E  21 08 00    	ld	hl,+(_col + 0x0008)
1790  0641  56          	ld	d, (hl)
1791  0642  14          	inc	d
1792  0643  3A 08 00    	ld	a,(_lin + 0x0008)
1793  0646  C6 0E       	add	a,0x0e
1794  0648  5F          	ld	e, a
1795  0649  D5          	push	de
1796  064A  CD 00 00    	call	_spr_calc_index
1797  064D  F1          	pop	af
1798  064E  22 00 00    	ld	(_index1),hl
1799  0651  CD 1F 07    	call	_player_pick
1800  0654  21 00 00    	ld	hl,_i
1801  0657  36 00       	ld	(hl),0x00
1802  0659              l_player_collision_00119:
1803  0659  2A 00 00    	ld	hl,(_i)
1804  065C  26 00       	ld	h,0x00
1805  065E  01 00 00    	ld	bc,_class
1806  0661  09          	add	hl,bc
1807  0662  7E          	ld	a,(hl)
1808  0663  B7          	or	a,a
1809  0664  CA 13 07    	jp	Z,l_player_collision_00120
1810  0667  2A 00 00    	ld	hl,(_i)
1811  066A  26 00       	ld	h,0x00
1812  066C  01 00 00    	ld	bc,_col
1813  066F  09          	add	hl,bc
1814  0670  4E          	ld	c, (hl)
1815  0671  06 00       	ld	b,0x00
1816  0673  ED 5B 08 00 	ld	de,(_col + 0x0008)
1817  0677  50          	ld	d,b
1818  0678  79          	ld	a, c
1819  0679  93          	sub	a, e
1820  067A  6F          	ld	l, a
1821  067B  78          	ld	a, b
1822  067C  9A          	sbc	a, d
1823  067D  67          	ld	h, a
1824  067E  CD 00 00    	call	_abs_fastcall
1825  0681  7D          	ld	a,l
1826  0682  32 00 00    	ld	(_v0),a
1827  0685  D6 02       	sub	a,0x02
1828  0687  D2 13 07    	jp	NC, l_player_collision_00120
1829  068A  2A 00 00    	ld	hl,(_i)
1830  068D  26 00       	ld	h,0x00
1831  068F  01 00 00    	ld	bc,_lin
1832  0692  09          	add	hl,bc
1833  0693  4E          	ld	c,(hl)
1834  0694  06 00       	ld	b,0x00
1835  0696  ED 5B 08 00 	ld	de,(_lin + 0x0008)
1836  069A  50          	ld	d,b
1837  069B  79          	ld	a, c
1838  069C  93          	sub	a, e
1839  069D  6F          	ld	l, a
1840  069E  78          	ld	a, b
1841  069F  9A          	sbc	a, d
1842  06A0  67          	ld	h, a
1843  06A1  CD 00 00    	call	_abs_fastcall
1844  06A4  7D          	ld	a,l
1845  06A5  32 00 00    	ld	(_v0),a
1846  06A8  2A 00 00    	ld	hl,(_i)
1847  06AB  26 00       	ld	h,0x00
1848  06AD  01 00 00    	ld	bc,_lin
1849  06B0  09          	add	hl,bc
1850  06B1  4E          	ld	c,(hl)
1851  06B2  21 08 00    	ld	hl,+(_lin + 0x0008)
1852  06B5  46          	ld	b, (hl)
1853  06B6  79          	ld	a, c
1854  06B7  90          	sub	a, b
1855  06B8  30 13       	jr	NC,l_player_collision_00108
1856  06BA  21 00 00    	ld	hl,_v0
1857  06BD  7E          	ld	a, (hl)
1858  06BE  D6 10       	sub	a,0x10
1859  06C0  30 04       	jr	NC,l_player_collision_00102
1860  06C2  36 01       	ld	(hl),0x01
1861  06C4  18 18       	jr	l_player_collision_00109
1862  06C6              l_player_collision_00102:
1863  06C6  21 00 00    	ld	hl,_v0
1864  06C9  36 00       	ld	(hl),0x00
1865  06CB  18 11       	jr	l_player_collision_00109
1866  06CD              l_player_collision_00108:
1867  06CD  21 00 00    	ld	hl,_v0
1868  06D0  7E          	ld	a, (hl)
1869  06D1  D6 0E       	sub	a,0x0e
1870  06D3  30 04       	jr	NC,l_player_collision_00105
1871  06D5  36 01       	ld	(hl),0x01
1872  06D7  18 05       	jr	l_player_collision_00109
1873  06D9              l_player_collision_00105:
1874  06D9  21 00 00    	ld	hl,_v0
1875  06DC  36 00       	ld	(hl),0x00
1876  06DE              l_player_collision_00109:
1877  06DE  3A 00 00    	ld	a,(_v0)
1878  06E1  B7          	or	a, a
1879  06E2  28 2F       	jr	Z,l_player_collision_00120
1880  06E4  2A 00 00    	ld	hl,(_i)
1881  06E7  26 00       	ld	h,0x00
1882  06E9  01 00 00    	ld	bc,_colint
1883  06EC  09          	add	hl,bc
1884  06ED  4E          	ld	c,(hl)
1885  06EE  06 00       	ld	b,0x00
1886  06F0  ED 5B 08 00 	ld	de,(_colint + 8)
1887  06F4  50          	ld	d,b
1888  06F5  79          	ld	a, c
1889  06F6  93          	sub	a, e
1890  06F7  6F          	ld	l, a
1891  06F8  78          	ld	a, b
1892  06F9  9A          	sbc	a, d
1893  06FA  67          	ld	h, a
1894  06FB  CD 00 00    	call	_abs_fastcall
1895  06FE  7D          	ld	a,l
1896  06FF  32 00 00    	ld	(_v0),a
1897  0702  D6 02       	sub	a,0x02
1898  0704  30 0D       	jr	NC,l_player_collision_00120
1899  0706  21 FF FF    	ld	hl,0xffff
1900  0709  22 00 00    	ld	(_player_kill_index),hl
1901  070C  01 08 00    	ld	bc,_state+8
1902  070F  0A          	ld	a,(bc)
1903  0710  F6 20       	or	a,0x20
1904  0712  02          	ld	(bc), a
1905  0713              l_player_collision_00120:
1906  0713  21 00 00    	ld	hl,_i
1907  0716  7E          	ld	a,(hl)
1908  0717  3C          	inc	a
1909  0718  77          	ld	(hl),a
1910  0719  D6 08       	sub	a,0x08
1911  071B  DA 59 06    	jp	C, l_player_collision_00119
1912  071E  C9          	ret
1913  071F              	SECTION code_compiler
1914  071F              ;	---------------------------------
1915  071F              ; Function player_pick
1916  071F              ; ---------------------------------
1917  071F              _player_pick:
1918  071F  01 00 00    	ld	bc,_scr_map
1919  0722  2A 00 00    	ld	hl,(_index1)
1920  0725  09          	add	hl,bc
1921  0726  7E          	ld	a,(hl)
1922  0727  32 00 00    	ld	(_v0),a
1923  072A  F5          	push	af
1924  072B  33          	inc	sp
1925  072C  CD F3 07    	call	_player_pick_deadly
1926  072F  33          	inc	sp
1927  0730  7D          	ld	a,l
1928  0731  32 00 00    	ld	(_v0),a
1929  0734  2A 00 00    	ld	hl,(_index1)
1930  0737  E5          	push	hl
1931  0738  F5          	push	af
1932  0739  33          	inc	sp
1933  073A  CD AB 07    	call	_player_pick_item
1934  073D  F1          	pop	af
1935  073E  33          	inc	sp
1936  073F  7D          	ld	a,l
1937  0740  32 00 00    	ld	(_v0),a
1938  0743  F5          	push	af
1939  0744  33          	inc	sp
1940  0745  CD 2A 08    	call	_player_pick_extra
1941  0748  33          	inc	sp
1942  0749  7D          	ld	a,l
1943  074A  32 00 00    	ld	(_v0),a
1944  074D  C9          	ret
1945  074E              	SECTION code_compiler
1946  074E              ;	---------------------------------
1947  074E              ; Function player_check_input
1948  074E              ; ---------------------------------
1949  074E              _player_check_input:
1950  074E  21 00 00    	ld	hl,_dirs
1951  0751  CB 56       	bit	2,(hl)
1952  0753  28 06       	jr	Z,l_player_check_input_00102
1953  0755  CB 5E       	bit	3,(hl)
1954  0757  28 02       	jr	Z,l_player_check_input_00102
1955  0759  36 00       	ld	(hl),0x00
1956  075B              l_player_check_input_00102:
1957  075B  21 00 00    	ld	hl,_dirs
1958  075E  CB 56       	bit	2,(hl)
1959  0760  20 08       	jr	NZ,l_player_check_input_00104
1960  0762  CB 5E       	bit	3,(hl)
1961  0764  20 04       	jr	NZ,l_player_check_input_00104
1962  0766  CB 7E       	bit	7, (hl)
1963  0768  28 04       	jr	Z,l_player_check_input_00105
1964  076A              l_player_check_input_00104:
1965  076A  2E 01       	ld	l,0x01
1966  076C  18 02       	jr	l_player_check_input_00108
1967  076E              l_player_check_input_00105:
1968  076E  2E 00       	ld	l,0x00
1969  0770              l_player_check_input_00108:
1970  0770  C9          	ret
1971  0771              	SECTION code_compiler
1972  0771              ;	---------------------------------
1973  0771              ; Function player_tile
1974  0771              ; ---------------------------------
1975  0771              _player_tile:
1976  0771  CD 00 00    	call	___sdcc_enter_ix
1977  0774  21 05 00    	ld	hl,0x0005
1978  0777  39          	add	hl, sp
1979  0778  EB          	ex	de,hl
1980  0779  21 04 00    	ld	hl,0x0004
1981  077C  39          	add	hl, sp
1982  077D  D5          	push	de
1983  077E  E5          	push	hl
1984  077F  CD 00 00    	call	_spr_get_tile_dir
1985  0782  F1          	pop	af
1986  0783  F1          	pop	af
1987  0784  7D          	ld	a,l
1988  0785  32 08 00    	ld	((_tile + 0x0008)),a
1989  0788  DD E1       	pop	ix
1990  078A  C9          	ret
1991  078B              	SECTION code_compiler
1992  078B              ;	---------------------------------
1993  078B              ; Function player_score_add
1994  078B              ; ---------------------------------
1995  078B              _player_score_add:
1996  078B  ED 4B 00 00 	ld	bc,(_player_score)
1997  078F  09          	add	hl,bc
1998  0790  22 00 00    	ld	(_player_score),hl
1999  0793  3A 00 00    	ld	a,(_game_score_top)
2000  0796  21 00 00    	ld	hl,_player_score
2001  0799  96          	sub	a, (hl)
2002  079A  3A 01 00    	ld	a,(_game_score_top + 1)
2003  079D  23          	inc	hl
2004  079E  9E          	sbc	a, (hl)
2005  079F  D2 00 00    	jp	NC,_game_print_score
2006  07A2  2A 00 00    	ld	hl,(_player_score)
2007  07A5  22 00 00    	ld	(_game_score_top),hl
2008  07A8  C3 00 00    	jp  _game_print_score
2009  07AB              	SECTION code_compiler
2010  07AB              ;	---------------------------------
2011  07AB              ; Function player_pick_item
2012  07AB              ; ---------------------------------
2013  07AB              _player_pick_item:
2014  07AB  CD 00 00    	call	___sdcc_enter_ix
2015  07AE  DD 7E 04    	ld	a,(ix+4)
2016  07B1  D6 08       	sub	a,0x08
2017  07B3  20 38       	jr	NZ,l_player_pick_item_00104
2018  07B5  21 64 00    	ld	hl,0x0064
2019  07B8  CD 8B 07    	call	_player_score_add
2020  07BB  3E 00       	ld	a, +((_scr_map) & 0xFF)
2021  07BD  DD 86 05    	add	a,(ix+5)
2022  07C0  4F          	ld	c, a
2023  07C1  3E 00       	ld	a, +((_scr_map) / 256)
2024  07C3  DD 8E 06    	adc	a,(ix+6)
2025  07C6  47          	ld	b, a
2026  07C7  AF          	xor	a, a
2027  07C8  02          	ld	(bc), a
2028  07C9  21 00 00    	ld	hl,_player_coins
2029  07CC  34          	inc	(hl)
2030  07CD  CD 00 00    	call	_audio_coin
2031  07D0  3A 00 00    	ld	a,(_obj_count)
2032  07D3  21 00 00    	ld	hl,_player_coins
2033  07D6  96          	sub	a, (hl)
2034  07D7  20 10       	jr	NZ,l_player_pick_item_00102
2035  07D9  CD 00 00    	call	_audio_door_open
2036  07DC  3E 80       	ld	a,0x80
2037  07DE  F5          	push	af
2038  07DF  33          	inc	sp
2039  07E0  CD 00 00    	call	_game_flash_exit
2040  07E3  33          	inc	sp
2041  07E4  21 00 00    	ld	hl,_obj_count
2042  07E7  36 FF       	ld	(hl),0xff
2043  07E9              l_player_pick_item_00102:
2044  07E9  2E 00       	ld	l,0x00
2045  07EB  18 03       	jr	l_player_pick_item_00105
2046  07ED              l_player_pick_item_00104:
2047  07ED  DD 6E 04    	ld	l,(ix+4)
2048  07F0              l_player_pick_item_00105:
2049  07F0  DD E1       	pop	ix
2050  07F2  C9          	ret
2051  07F3              	SECTION code_compiler
2052  07F3              ;	---------------------------------
2053  07F3              ; Function player_pick_deadly
2054  07F3              ; ---------------------------------
2055  07F3              _player_pick_deadly:
2056  07F3  CD 00 00    	call	___sdcc_enter_ix
2057  07F6  3E 00       	ld	a, +((_tile_class) & 0xFF)
2058  07F8  DD 86 04    	add	a,(ix+4)
2059  07FB  4F          	ld	c, a
2060  07FC  3E 00       	ld	a, +((_tile_class) / 256)
2061  07FE  CE 00       	adc	a,0x00
2062  0800  47          	ld	b, a
2063  0801  0A          	ld	a, (bc)
2064  0802  DD 77 04    	ld	(ix+4),a
2065  0805  D6 05       	sub	a,0x05
2066  0807  20 1B       	jr	NZ,l_player_pick_deadly_00102
2067  0809  01 08 00    	ld	bc,_state+8
2068  080C  0A          	ld	a, (bc)
2069  080D  F6 20       	or	a,0x20
2070  080F  02          	ld	(bc), a
2071  0810  2A 00 00    	ld	hl,(_index1)
2072  0813  22 00 00    	ld	(_player_kill_index),hl
2073  0816  21 00 00    	ld	hl,_v0
2074  0819  36 00       	ld	(hl),0x00
2075  081B  21 00 00    	ld	hl,_v1
2076  081E  36 00       	ld	(hl),0x00
2077  0820  2E 00       	ld	l,0x00
2078  0822  18 03       	jr	l_player_pick_deadly_00103
2079  0824              l_player_pick_deadly_00102:
2080  0824  DD 6E 04    	ld	l,(ix+4)
2081  0827              l_player_pick_deadly_00103:
2082  0827  DD E1       	pop	ix
2083  0829  C9          	ret
2084  082A              	SECTION code_compiler
2085  082A              ;	---------------------------------
2086  082A              ; Function player_pick_extra
2087  082A              ; ---------------------------------
2088  082A              _player_pick_extra:
2089  082A  CD 00 00    	call	___sdcc_enter_ix
2090  082D  DD 7E 04    	ld	a,(ix+4)
2091  0830  D6 06       	sub	a,0x06
2092  0832  C2 BC 08    	jp	NZ,l_player_pick_extra_00110
2093  0835  3A 00 00    	ld	a,(_scr_curr)
2094  0838  FE 07       	cp	a,0x07
2095  083A  28 04       	jr	Z,l_player_pick_extra_00106
2096  083C  D6 0B       	sub	a,0x0b
2097  083E  20 78       	jr	NZ,l_player_pick_extra_00107
2098  0840              l_player_pick_extra_00106:
2099  0840  01 00 00    	ld	bc,_scr_map
2100  0843  2A 00 00    	ld	hl,(_index1)
2101  0846  09          	add	hl,bc
2102  0847  36 08       	ld	(hl),0x08
2103  0849  CD 00 00    	call	_game_cell_paint_index
2104  084C  21 00 00    	ld	hl,_index1
2105  084F  7E          	ld	a, (hl)
2106  0850  D6 05       	sub	a,0x05
2107  0852  23          	inc	hl
2108  0853  B6          	or	a, (hl)
2109  0854  28 0A       	jr	Z,l_player_pick_extra_00101
2110  0856  21 00 00    	ld	hl,_index1
2111  0859  7E          	ld	a, (hl)
2112  085A  D6 06       	sub	a,0x06
2113  085C  23          	inc	hl
2114  085D  B6          	or	a, (hl)
2115  085E  20 21       	jr	NZ,l_player_pick_extra_00102
2116  0860              l_player_pick_extra_00101:
2117  0860  21 71 01    	ld	hl,0x0171
2118  0863  22 00 00    	ld	(_index1),hl
2119  0866  21 71 01    	ld	hl, +(_scr_map + 0x0171)
2120  0869  36 00       	ld	(hl),0x00
2121  086B  CD 00 00    	call	_game_cell_paint_index
2122  086E  21 91 01    	ld	hl,0x0191
2123  0871  22 00 00    	ld	(_index1),hl
2124  0874  21 91 01    	ld	hl, +(_scr_map + 0x0191)
2125  0877  36 00       	ld	(hl),0x00
2126  0879  CD 00 00    	call	_game_cell_paint_index
2127  087C  21 02 00    	ld	hl, +(_value_b + 0x0002)
2128  087F  36 12       	ld	(hl),0x12
2129  0881              l_player_pick_extra_00102:
2130  0881  21 00 00    	ld	hl,_index1
2131  0884  7E          	ld	a, (hl)
2132  0885  D6 12       	sub	a,0x12
2133  0887  23          	inc	hl
2134  0888  B6          	or	a, (hl)
2135  0889  20 2D       	jr	NZ,l_player_pick_extra_00107
2136  088B  01 00 00    	ld	bc,_tile+0
2137  088E  0A          	ld	a, (bc)
2138  088F  C6 02       	add	a,0x02
2139  0891  02          	ld	(bc), a
2140  0892  21 00 00    	ld	hl,_spr_kind
2141  0895  36 07       	ld	(hl),0x07
2142  0897  21 00 00    	ld	hl,_spr_speed
2143  089A  36 04       	ld	(hl),0x04
2144  089C  21 4F 00    	ld	hl,0x004f
2145  089F  22 00 00    	ld	(_index1),hl
2146  08A2  21 4F 00    	ld	hl, +(_scr_map + 0x004f)
2147  08A5  36 00       	ld	(hl),0x00
2148  08A7  CD 00 00    	call	_game_cell_paint_index
2149  08AA  21 50 00    	ld	hl,0x0050
2150  08AD  22 00 00    	ld	(_index1),hl
2151  08B0  21 50 00    	ld	hl, +(_scr_map + 0x0050)
2152  08B3  36 00       	ld	(hl),0x00
2153  08B5  CD 00 00    	call	_game_cell_paint_index
2154  08B8              l_player_pick_extra_00107:
2155  08B8  2E 00       	ld	l,0x00
2156  08BA  18 03       	jr	l_player_pick_extra_00111
2157  08BC              l_player_pick_extra_00110:
2158  08BC  DD 6E 04    	ld	l,(ix+4)
2159  08BF              l_player_pick_extra_00111:
2160  08BF  DD E1       	pop	ix
2161  08C1  C9          	ret
2162  08C2              	SECTION code_compiler
2163  08C2              ;	---------------------------------
2164  08C2              ; Function player_check_ceil
2165  08C2              ; ---------------------------------
2166  08C2              _player_check_ceil:
2167  08C2  CD 00 00    	call	___sdcc_enter_ix
2168  08C5  DD 66 05    	ld	h,(ix+5)
2169  08C8  DD 6E 04    	ld	l,(ix+4)
2170  08CB  E5          	push	hl
2171  08CC  CD 00 00    	call	_spr_calc_index
2172  08CF  F1          	pop	af
2173  08D0  22 00 00    	ld	(_index1),hl
2174  08D3  01 00 00    	ld	bc,_scr_map
2175  08D6  09          	add	hl,bc
2176  08D7  7E          	ld	a,(hl)
2177  08D8  32 00 00    	ld	(_v0),a
2178  08DB  DD 46 05    	ld	b,(ix+5)
2179  08DE  04          	inc	b
2180  08DF  DD 4E 04    	ld	c,(ix+4)
2181  08E2  C5          	push	bc
2182  08E3  CD 00 00    	call	_spr_calc_index
2183  08E6  F1          	pop	af
2184  08E7  22 00 00    	ld	(_index1),hl
2185  08EA  01 00 00    	ld	bc,_scr_map
2186  08ED  09          	add	hl,bc
2187  08EE  7E          	ld	a,(hl)
2188  08EF  32 00 00    	ld	(_v1),a
2189  08F2  3E 1F       	ld	a,0x1f
2190  08F4  21 00 00    	ld	hl,_v0
2191  08F7  96          	sub	a, (hl)
2192  08F8  30 02       	jr	NC,l_player_check_ceil_00102
2193  08FA  36 00       	ld	(hl),0x00
2194  08FC              l_player_check_ceil_00102:
2195  08FC  3E 1F       	ld	a,0x1f
2196  08FE  21 00 00    	ld	hl,_v1
2197  0901  96          	sub	a, (hl)
2198  0902  30 02       	jr	NC,l_player_check_ceil_00104
2199  0904  36 00       	ld	(hl),0x00
2200  0906              l_player_check_ceil_00104:
2201  0906  01 00 00    	ld	bc,_tile_class+0
2202  0909  79          	ld	a, c
2203  090A  21 00 00    	ld	hl,_v0
2204  090D  86          	add	a, (hl)
2205  090E  5F          	ld	e, a
2206  090F  78          	ld	a, b
2207  0910  CE 00       	adc	a,0x00
2208  0912  57          	ld	d, a
2209  0913  1A          	ld	a, (de)
2210  0914  77          	ld	(hl), a
2211  0915  79          	ld	a, c
2212  0916  21 00 00    	ld	hl,_v1
2213  0919  86          	add	a, (hl)
2214  091A  4F          	ld	c, a
2215  091B  78          	ld	a, b
2216  091C  CE 00       	adc	a,0x00
2217  091E  47          	ld	b, a
2218  091F  0A          	ld	a, (bc)
2219  0920  77          	ld	(hl), a
2220  0921  3A 00 00    	ld	a,(_v0)
2221  0924  D6 03       	sub	a,0x03
2222  0926  28 0B       	jr	Z,l_player_check_ceil_00106
2223  0928  3A 00 00    	ld	a,(_v1)
2224  092B  D6 03       	sub	a,0x03
2225  092D  28 04       	jr	Z,l_player_check_ceil_00106
2226  092F  2E 01       	ld	l,0x01
2227  0931  18 02       	jr	l_player_check_ceil_00108
2228  0933              l_player_check_ceil_00106:
2229  0933  2E 00       	ld	l,0x00
2230  0935              l_player_check_ceil_00108:
2231  0935  DD E1       	pop	ix
2232  0937  C9          	ret
2233  0938              	SECTION code_compiler
2234  0938              ;	---------------------------------
2235  0938              ; Function player_check_conveyor
2236  0938              ; ---------------------------------
2237  0938              _player_check_conveyor:
2238  0938  21 08 00    	ld	hl,+(_col + 0x0008)
2239  093B  56          	ld	d, (hl)
2240  093C  3A 08 00    	ld	a,(_lin + 0x0008)
2241  093F  C6 10       	add	a,0x10
2242  0941  5F          	ld	e, a
2243  0942  D5          	push	de
2244  0943  CD 00 00    	call	_spr_calc_index
2245  0946  F1          	pop	af
2246  0947  22 00 00    	ld	(_index1),hl
2247  094A  01 00 00    	ld	bc,_tile_class+0
2248  094D  11 00 00    	ld	de,_scr_map
2249  0950  2A 00 00    	ld	hl,(_index1)
2250  0953  19          	add	hl,de
2251  0954  6E          	ld	l,(hl)
2252  0955  26 00       	ld	h,0x00
2253  0957  09          	add	hl, bc
2254  0958  7E          	ld	a, (hl)
2255  0959  32 00 00    	ld	(_v0),a
2256  095C  ED 5B 00 00 	ld	de,(_index1)
2257  0960  13          	inc	de
2258  0961  21 00 00    	ld	hl,_scr_map
2259  0964  19          	add	hl, de
2260  0965  6E          	ld	l, (hl)
2261  0966  26 00       	ld	h,0x00
2262  0968  09          	add	hl, bc
2263  0969  7E          	ld	a, (hl)
2264  096A  32 00 00    	ld	(_v1),a
2265  096D  3A 00 00    	ld	a,(_v0)
2266  0970  D6 04       	sub	a,0x04
2267  0972  28 07       	jr	Z,l_player_check_conveyor_00101
2268  0974  3A 00 00    	ld	a,(_v1)
2269  0977  D6 04       	sub	a,0x04
2270  0979  20 09       	jr	NZ,l_player_check_conveyor_00102
2271  097B              l_player_check_conveyor_00101:
2272  097B  01 08 00    	ld	bc,_state+8
2273  097E  0A          	ld	a, (bc)
2274  097F  F6 10       	or	a,0x10
2275  0981  02          	ld	(bc), a
2276  0982  18 07       	jr	l_player_check_conveyor_00105
2277  0984              l_player_check_conveyor_00102:
2278  0984  01 08 00    	ld	bc,_state+8
2279  0987  0A          	ld	a, (bc)
2280  0988  E6 EF       	and	a,0xef
2281  098A  02          	ld	(bc), a
2282  098B              l_player_check_conveyor_00105:
2283  098B  C9          	ret
2284  098C              	SECTION code_compiler
2285  098C              ;	---------------------------------
2286  098C              ; Function player_check_floor
2287  098C              ; ---------------------------------
2288  098C              _player_check_floor:
2289  098C  CD 00 00    	call	___sdcc_enter_ix
2290  098F  F5          	push	af
2291  0990  F5          	push	af
2292  0991  3A 08 00    	ld	a,(_col + 0x0008)
2293  0994  DD 86 04    	add	a,(ix+4)
2294  0997  57          	ld	d, a
2295  0998  3A 08 00    	ld	a,(_lin + 0x0008)
2296  099B  C6 10       	add	a,0x10
2297  099D  5F          	ld	e, a
2298  099E  D5          	push	de
2299  099F  CD 00 00    	call	_spr_calc_index
2300  09A2  F1          	pop	af
2301  09A3  22 00 00    	ld	(_index1),hl
2302  09A6  3E 1F       	ld	a,0x1f
2303  09A8  21 00 00    	ld	hl,_v0
2304  09AB  96          	sub	a, (hl)
2305  09AC  30 02       	jr	NC,l_player_check_floor_00102
2306  09AE  36 00       	ld	(hl),0x00
2307  09B0              l_player_check_floor_00102:
2308  09B0  01 00 00    	ld	bc,_scr_map+0
2309  09B3  2A 00 00    	ld	hl,(_index1)
2310  09B6  09          	add	hl,bc
2311  09B7  7E          	ld	a,(hl)
2312  09B8  EB          	ex	de,hl
2313  09B9  DD 77 FD    	ld	(ix-3),a
2314  09BC  C6 00       	add	a,+((_tile_class) & 0xFF)
2315  09BE  6F          	ld	l, a
2316  09BF  3E 00       	ld	a, +((_tile_class) / 256)
2317  09C1  CE 00       	adc	a,0x00
2318  09C3  67          	ld	h, a
2319  09C4  7E          	ld	a, (hl)
2320  09C5  32 00 00    	ld	(_v0),a
2321  09C8  B7          	or	a, a
2322  09C9  28 0B       	jr	Z,l_player_check_floor_00103
2323  09CB  D6 08       	sub	a,0x08
2324  09CD  28 07       	jr	Z,l_player_check_floor_00103
2325  09CF  3A 00 00    	ld	a,(_v0)
2326  09D2  D6 05       	sub	a,0x05
2327  09D4  20 05       	jr	NZ,l_player_check_floor_00104
2328  09D6              l_player_check_floor_00103:
2329  09D6  2E 01       	ld	l,0x01
2330  09D8  C3 5A 0A    	jp	l_player_check_floor_00114
2331  09DB              l_player_check_floor_00104:
2332  09DB  3A 00 00    	ld	a,(_v0)
2333  09DE  D6 02       	sub	a,0x02
2334  09E0  20 76       	jr	NZ,l_player_check_floor_00113
2335  09E2  3A 08 00    	ld	a,(_col + 0x0008)
2336  09E5  DD 77 FC    	ld	(ix-4),a
2337  09E8  DD 86 04    	add	a,(ix+4)
2338  09EB  32 00 00    	ld	(_s_col1),a
2339  09EE  DD 7E FD    	ld	a,(ix-3)
2340  09F1  D6 02       	sub	a,0x02
2341  09F3  20 0D       	jr	NZ,l_player_check_floor_00110
2342  09F5  C5          	push	bc
2343  09F6  CD 00 00    	call	_audio_crumble
2344  09F9  C1          	pop	bc
2345  09FA  2A 00 00    	ld	hl,(_index1)
2346  09FD  09          	add	hl,bc
2347  09FE  36 09       	ld	(hl),0x09
2348  0A00  18 25       	jr	l_player_check_floor_00111
2349  0A02              l_player_check_floor_00110:
2350  0A02  DD 7E FD    	ld	a,(ix-3)
2351  0A05  3C          	inc	a
2352  0A06  12          	ld	(de), a
2353  0A07  79          	ld	a, c
2354  0A08  21 00 00    	ld	hl,_index1
2355  0A0B  86          	add	a, (hl)
2356  0A0C  DD 77 FE    	ld	(ix-2),a
2357  0A0F  78          	ld	a, b
2358  0A10  23          	inc	hl
2359  0A11  8E          	adc	a, (hl)
2360  0A12  DD 6E FE    	ld	l,(ix-2)
2361  0A15  DD 77 FF    	ld	(ix-1),a
2362  0A18  67          	ld	h,a
2363  0A19  5E          	ld	e, (hl)
2364  0A1A  3E 0B       	ld	a,0x0b
2365  0A1C  93          	sub	a, e
2366  0A1D  30 08       	jr	NC,l_player_check_floor_00111
2367  0A1F  DD 6E FE    	ld	l,(ix-2)
2368  0A22  DD 66 FF    	ld	h,(ix-1)
2369  0A25  36 00       	ld	(hl),0x00
2370  0A27              l_player_check_floor_00111:
2371  0A27  ED 5B 08 00 	ld	de,(_lin + 0x0008)
2372  0A2B  16 00       	ld	d,0x00
2373  0A2D  21 10 00    	ld	hl,0x0010
2374  0A30  19          	add	hl, de
2375  0A31  7D          	ld	a,l
2376  0A32  2E 03       	ld	l,0x03
2377  0A34              l_player_check_floor_00147:
2378  0A34  CB 2C       	sra	h
2379  0A36  1F          	rra
2380  0A37  2D          	dec	l
2381  0A38  20 FA       	jr	NZ,l_player_check_floor_00147
2382  0A3A  3C          	inc	a
2383  0A3B  07          	rlca
2384  0A3C  07          	rlca
2385  0A3D  07          	rlca
2386  0A3E  E6 F8       	and	a,0xf8
2387  0A40  32 00 00    	ld	(_s_row1),a
2388  0A43  2A 00 00    	ld	hl,(_index1)
2389  0A46  09          	add	hl,bc
2390  0A47  46          	ld	b, (hl)
2391  0A48  3A 00 00    	ld	a,(_s_col1)
2392  0A4B  F5          	push	af
2393  0A4C  33          	inc	sp
2394  0A4D  3A 00 00    	ld	a,(_s_row1)
2395  0A50  48          	ld	c,b
2396  0A51  47          	ld	b,a
2397  0A52  C5          	push	bc
2398  0A53  CD 00 00    	call	_spr_draw8
2399  0A56  F1          	pop	af
2400  0A57  33          	inc	sp
2401  0A58              l_player_check_floor_00113:
2402  0A58  2E 00       	ld	l,0x00
2403  0A5A              l_player_check_floor_00114:
2404  0A5A  DD F9       	ld	sp, ix
2405  0A5C  DD E1       	pop	ix
2406  0A5E  C9          	ret
2407  0A5F              	SECTION code_compiler
2408  0A5F              ;	---------------------------------
2409  0A5F              ; Function player_get_floor
2410  0A5F              ; ---------------------------------
2411  0A5F              _player_get_floor:
2412  0A5F  21 08 00    	ld	hl,+(_col + 0x0008)
2413  0A62  56          	ld	d, (hl)
2414  0A63  3A 08 00    	ld	a,(_lin + 0x0008)
2415  0A66  C6 10       	add	a,0x10
2416  0A68  5F          	ld	e, a
2417  0A69  D5          	push	de
2418  0A6A  CD 00 00    	call	_spr_calc_index
2419  0A6D  F1          	pop	af
2420  0A6E  22 00 00    	ld	(_index1),hl
2421  0A71  21 00 00    	ld	hl,_i
2422  0A74  36 00       	ld	(hl),0x00
2423  0A76  01 00 00    	ld	bc,_tile_class+0
2424  0A79              l_player_get_floor_00113:
2425  0A79  3A 00 00    	ld	a,(_i)
2426  0A7C  D6 10       	sub	a,0x10
2427  0A7E  D2 0F 0B    	jp	NC, l_player_get_floor_00115
2428  0A81  11 00 00    	ld	de,_scr_map
2429  0A84  2A 00 00    	ld	hl,(_index1)
2430  0A87  19          	add	hl,de
2431  0A88  7E          	ld	a,(hl)
2432  0A89  32 00 00    	ld	(_v0),a
2433  0A8C  ED 5B 00 00 	ld	de,(_index1)
2434  0A90  13          	inc	de
2435  0A91  21 00 00    	ld	hl,_scr_map
2436  0A94  19          	add	hl, de
2437  0A95  7E          	ld	a, (hl)
2438  0A96  32 00 00    	ld	(_v1),a
2439  0A99  3E 1F       	ld	a,0x1f
2440  0A9B  21 00 00    	ld	hl,_v0
2441  0A9E  96          	sub	a, (hl)
2442  0A9F  30 02       	jr	NC,l_player_get_floor_00102
2443  0AA1  36 00       	ld	(hl),0x00
2444  0AA3              l_player_get_floor_00102:
2445  0AA3  3E 1F       	ld	a,0x1f
2446  0AA5  21 00 00    	ld	hl,_v1
2447  0AA8  96          	sub	a, (hl)
2448  0AA9  30 02       	jr	NC,l_player_get_floor_00104
2449  0AAB  36 00       	ld	(hl),0x00
2450  0AAD              l_player_get_floor_00104:
2451  0AAD  79          	ld	a, c
2452  0AAE  21 00 00    	ld	hl,_v0
2453  0AB1  86          	add	a, (hl)
2454  0AB2  5F          	ld	e, a
2455  0AB3  78          	ld	a, b
2456  0AB4  CE 00       	adc	a,0x00
2457  0AB6  57          	ld	d, a
2458  0AB7  1A          	ld	a, (de)
2459  0AB8  77          	ld	(hl), a
2460  0AB9  79          	ld	a, c
2461  0ABA  21 00 00    	ld	hl,_v1
2462  0ABD  86          	add	a, (hl)
2463  0ABE  5F          	ld	e, a
2464  0ABF  78          	ld	a, b
2465  0AC0  CE 00       	adc	a,0x00
2466  0AC2  57          	ld	d, a
2467  0AC3  1A          	ld	a, (de)
2468  0AC4  77          	ld	(hl), a
2469  0AC5  3A 00 00    	ld	a,(_v0)
2470  0AC8  B7          	or	a, a
2471  0AC9  28 0B       	jr	Z,l_player_get_floor_00112
2472  0ACB  D6 08       	sub	a,0x08
2473  0ACD  28 07       	jr	Z,l_player_get_floor_00112
2474  0ACF  3A 00 00    	ld	a,(_v0)
2475  0AD2  D6 05       	sub	a,0x05
2476  0AD4  20 22       	jr	NZ,l_player_get_floor_00106
2477  0AD6              l_player_get_floor_00112:
2478  0AD6  3A 00 00    	ld	a,(_v1)
2479  0AD9  B7          	or	a, a
2480  0ADA  28 0B       	jr	Z,l_player_get_floor_00105
2481  0ADC  D6 08       	sub	a,0x08
2482  0ADE  28 07       	jr	Z,l_player_get_floor_00105
2483  0AE0  3A 00 00    	ld	a,(_v1)
2484  0AE3  D6 05       	sub	a,0x05
2485  0AE5  20 11       	jr	NZ,l_player_get_floor_00106
2486  0AE7              l_player_get_floor_00105:
2487  0AE7  2A 00 00    	ld	hl,(_index1)
2488  0AEA  11 20 00    	ld	de,0x0020
2489  0AED  19          	add	hl,de
2490  0AEE  22 00 00    	ld	(_index1),hl
2491  0AF1  21 00 00    	ld	hl,_i
2492  0AF4  34          	inc	(hl)
2493  0AF5  C3 79 0A    	jp	l_player_get_floor_00113
2494  0AF8              l_player_get_floor_00106:
2495  0AF8  2A 00 00    	ld	hl,(_index1)
2496  0AFB  4D          	ld	c,l
2497  0AFC  5C          	ld	e,h
2498  0AFD  06 05       	ld	b,0x05
2499  0AFF  79          	ld	a,c
2500  0B00              l_player_get_floor_00156:
2501  0B00  CB 3B       	srl	e
2502  0B02  1F          	rra
2503  0B03  10 FB       	djnz	l_player_get_floor_00156
2504  0B05  07          	rlca
2505  0B06  07          	rlca
2506  0B07  07          	rlca
2507  0B08  E6 F8       	and	a,0xf8
2508  0B0A  C6 F0       	add	a,0xf0
2509  0B0C  6F          	ld	l, a
2510  0B0D  18 02       	jr	l_player_get_floor_00116
2511  0B0F              l_player_get_floor_00115:
2512  0B0F  2E 68       	ld	l,0x68
2513  0B11              l_player_get_floor_00116:
2514  0B11  C9          	ret
2515  0B12              	SECTION code_compiler
2516  0B12              ;	---------------------------------
2517  0B12              ; Function player_lost_life
2518  0B12              ; ---------------------------------
2519  0B12              _player_lost_life:
2520  0B12  CD 00 00    	call	___sdcc_enter_ix
2521  0B15  F5          	push	af
2522  0B16  CD 00 00    	call	_ay_reset
2523  0B19  CD 00 00    	call	_audio_dead
2524  0B1C  4F          	ld	c, a
2525  0B1D              l_player_lost_life_00104:
2526  0B1D  79          	ld	a, c
2527  0B1E  D6 20       	sub	a,0x20
2528  0B20  30 79       	jr	NC,l_player_lost_life_00106
2529  0B22  21 00 00    	ld	hl,_player_kill_index
2530  0B25  7E          	ld	a, (hl)
2531  0B26  3C          	inc	a
2532  0B27  20 05       	jr	NZ,l_player_lost_life_00135
2533  0B29  23          	inc	hl
2534  0B2A  7E          	ld	a, (hl)
2535  0B2B  3C          	inc	a
2536  0B2C  28 3D       	jr	Z,l_player_lost_life_00102
2537  0B2E              l_player_lost_life_00135:
2538  0B2E  2A 00 00    	ld	hl,(_player_kill_index)
2539  0B31  22 00 00    	ld	(_index1),hl
2540  0B34  21 08 00    	ld	hl,+(_col + 0x0008)
2541  0B37  56          	ld	d, (hl)
2542  0B38  3A 08 00    	ld	a,(_lin + 0x0008)
2543  0B3B  C6 10       	add	a,0x10
2544  0B3D  5F          	ld	e, a
2545  0B3E  3A 08 00    	ld	a,(_tile + 0x0008)
2546  0B41  DD 77 FF    	ld	(ix-1),a
2547  0B44  2A 08 00    	ld	hl,(_colint + 0x0008)
2548  0B47  DD 7E FF    	ld	a,(ix-1)
2549  0B4A  85          	add	a, l
2550  0B4B  47          	ld	b, a
2551  0B4C  C5          	push	bc
2552  0B4D  D5          	push	de
2553  0B4E  0E 05       	ld	c,0x05
2554  0B50  C5          	push	bc
2555  0B51  CD 00 00    	call	_NIRVANAP_spriteT_callee
2556  0B54  C1          	pop	bc
2557  0B55  76          	halt
2558  0B56  C5          	push	bc
2559  0B57  21 00 00    	ld	hl,0x0000
2560  0B5A  E5          	push	hl
2561  0B5B  2E 05       	ld	l,0x05
2562  0B5D  E5          	push	hl
2563  0B5E  CD 00 00    	call	_NIRVANAP_spriteT_callee
2564  0B61  C1          	pop	bc
2565  0B62  76          	halt
2566  0B63  C5          	push	bc
2567  0B64  CD 00 00    	call	_game_cell_paint_index
2568  0B67  C1          	pop	bc
2569  0B68  76          	halt
2570  0B69  18 2C       	jr	l_player_lost_life_00103
2571  0B6B              l_player_lost_life_00102:
2572  0B6B  21 08 00    	ld	hl,+(_col + 0x0008)
2573  0B6E  46          	ld	b, (hl)
2574  0B6F  3A 08 00    	ld	a,(_lin + 0x0008)
2575  0B72  C6 10       	add	a,0x10
2576  0B74  57          	ld	d, a
2577  0B75  21 08 00    	ld	hl,+(_tile + 0x0008)
2578  0B78  5E          	ld	e, (hl)
2579  0B79  2A 08 00    	ld	hl,(_colint + 0x0008)
2580  0B7C  7B          	ld	a, e
2581  0B7D  85          	add	a, l
2582  0B7E  C5          	push	bc
2583  0B7F  4A          	ld	c, d
2584  0B80  C5          	push	bc
2585  0B81  57          	ld	d,a
2586  0B82  1E 05       	ld	e,0x05
2587  0B84  D5          	push	de
2588  0B85  CD 00 00    	call	_NIRVANAP_spriteT_callee
2589  0B88  C1          	pop	bc
2590  0B89  76          	halt
2591  0B8A  C5          	push	bc
2592  0B8B  21 00 00    	ld	hl,0x0000
2593  0B8E  E5          	push	hl
2594  0B8F  2E 05       	ld	l,0x05
2595  0B91  E5          	push	hl
2596  0B92  CD 00 00    	call	_NIRVANAP_spriteT_callee
2597  0B95  C1          	pop	bc
2598  0B96  76          	halt
2599  0B97              l_player_lost_life_00103:
2600  0B97  0C          	inc	c
2601  0B98  C3 1D 0B    	jp	l_player_lost_life_00104
2602  0B9B              l_player_lost_life_00106:
2603  0B9B  3A 08 00    	ld	a,(_lin + 0x0008)
2604  0B9E  32 00 00    	ld	(_s_lin0),a
2605  0BA1  3A 08 00    	ld	a,(_col + 0x0008)
2606  0BA4  32 00 00    	ld	(_s_col0),a
2607  0BA7  3A 00 00    	ld	a,(_game_inf_lives)
2608  0BAA  B7          	or	a, a
2609  0BAB  20 04       	jr	NZ,l_player_lost_life_00108
2610  0BAD  21 00 00    	ld	hl,_player_lives
2611  0BB0  35          	dec	(hl)
2612  0BB1              l_player_lost_life_00108:
2613  0BB1  3A 00 00    	ld	a,(_player_lives)
2614  0BB4  B7          	or	a, a
2615  0BB5  28 05       	jr	Z,l_player_lost_life_00110
2616  0BB7  CD 00 00    	call	_game_round_init
2617  0BBA  18 0A       	jr	l_player_lost_life_00112
2618  0BBC              l_player_lost_life_00110:
2619  0BBC  21 00 00    	ld	hl,_player_lives
2620  0BBF  36 00       	ld	(hl),0x00
2621  0BC1  21 00 00    	ld	hl,_game_over
2622  0BC4  36 01       	ld	(hl),0x01
2623  0BC6              l_player_lost_life_00112:
2624  0BC6  F1          	pop	af
2625  0BC7  DD E1       	pop	ix
2626  0BC9  C9          	ret
2627  0BCA              	SECTION IGNORE
2628  0000              
